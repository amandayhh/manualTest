{
  "swagger" : "2.0",
  "info" : {
    "description" : "",
    "version" : "4.1.0",
    "title" : "Contacts API",
    "contact" : {
      "name" : "",
      "email" : ""
    }
  },
  "host" : "https",
  "basePath" : "//toto.notfound.com",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/account/token" : {
      "post" : {
        "summary" : "Get an access token",
        "description" : "Gets an access token for the user.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "client_id", "client_secret", "grant_type", "scope" ],
            "properties" : {
              "username" : {
                "type" : "string",
                "description" : "User's username.\n\nRequired for a password grant."
              },
              "password" : {
                "type" : "string",
                "description" : "User's password.\n\nRequired for a password grant."
              },
              "grant_type" : {
                "type" : "string",
                "description" : "Type of grant.\n\n:exclamation: Note that third-party clients are unable to use the `password` grant.",
                "enum" : [ "password", "refresh_token", "authorization_code" ]
              },
              "scope" : {
                "type" : "string",
                "description" : "Grant scope.",
                "enum" : [ "user" ]
              },
              "client_id" : {
                "type" : "string",
                "description" : "ID of the application."
              },
              "client_secret" : {
                "type" : "string",
                "description" : "Secret key for the application."
              },
              "refresh_token" : {
                "type" : "string",
                "description" : "If you're doing a token refresh grant, then you need to send through the refresh token that you already have."
              },
              "code" : {
                "type" : "string",
                "description" : "If you are logging in via an authorization code, put it here."
              },
              "redirect_uri" : {
                "type" : "string",
                "description" : "If doing an authorization code grant, this parameter needs to be sent and it needs to match the redirect_uri that was in the original authorization query string."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A successful response will result in token details being returned.\n\nFor subsequent requests, you want to send through an authorization header with the access token in the usual OAuth format.\n\nFor example: `Authorization: Bearer 85d5ff48b88ba4cf6cfff538830f157eb373932f537de18a4b04e4a993c5803f1db2dbda29cbff536ce9499c663fc7a576091130645cd9e39ce9a3df6b1b3bfe`",
            "schema" : {
              "required" : [ "access_token", "expires_in", "refresh_token", "token_type" ],
              "type" : "object",
              "description" : ":exclamation: Note that unlike every other API response, the object returned here does **not** contain a `data` key - everything is inside the root.",
              "properties" : {
                "access_token" : {
                  "type" : "string",
                  "description" : "The access token for the user."
                },
                "refresh_token" : {
                  "type" : "string",
                  "description" : "The user's refresh token."
                },
                "expires_in" : {
                  "type" : "integer",
                  "description" : "Number of seconds until the access token expires."
                },
                "token_type" : {
                  "type" : "string",
                  "description" : "The type of token returned.",
                  "enum" : [ "Bearer" ]
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/account/authorize" : {
      "get" : {
        "summary" : "Get an authorization code",
        "description" : "This will obtain an authorization code for use in an authorization code grant. Normally you don't want to access this, instead follow the information on [obtaining an access token](#text_getting_an_access_token) for the proper login flow.",
        "parameters" : [ {
          "name" : "client_id",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The application ID."
        }, {
          "name" : "response_type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The response type required. This will always be \"code\".",
          "enum" : [ "code" ]
        }, {
          "name" : "redirect_uri",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The URL to redirect to upon a successful authorization."
        }, {
          "name" : "scope",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The scope. We only have one at the moment - \"user\".",
          "enum" : [ "user" ]
        } ],
        "responses" : {
          "302" : {
            "description" : "A successful response will result in a 302 redirect happening - the redirect url will be the redirect_uri parameter that was sent, with `?code={code}` appended to the end of it. The code parameter is what you want to send when requesting an access token."
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Status 500",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/account" : {
      "get" : {
        "summary" : "Get account ID",
        "description" : "Get the account ID associated with the current login token",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "integer",
                  "description" : "The user's ID."
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Create a new account",
        "description" : "Creates a new user account.\n\nIf a valid access token is sent with this request, the account created will be a subaccount of the account that the access token belongs to.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "company", "country", "email", "name", "password", "phone", "sector" ],
            "properties" : {
              "username" : {
                "type" : "string",
                "description" : "User's username. If omitted, the username will be set to the account's email address."
              },
              "password" : {
                "type" : "string",
                "description" : "User's password.\n\nPassword must be 8 characters or longer, and contain at least one uppercase character, one lowercase character, and one number.",
                "minLength" : 8
              },
              "email" : {
                "type" : "string",
                "description" : "User's email address."
              },
              "name" : {
                "type" : "string",
                "description" : "User's name."
              },
              "phone" : {
                "type" : "string",
                "description" : "User's phone number.\n\nThis is required for new accounts, but optional for subaccounts.",
                "pattern" : "^[0-9\\(\\)\\+\\.\\s]+"
              },
              "fax" : {
                "type" : "string",
                "description" : "User's fax number."
              },
              "company" : {
                "type" : "string",
                "description" : "User's company.\n\nThis is required for new accounts, but optional for subaccounts."
              },
              "sector" : {
                "type" : "integer",
                "description" : "User's industry sector. This is a integer that represents the sector. A list of sectors and their IDs can be accessed at [/site/sectors](#operation_get_available_industry_sectors).\n\nThis is required for new accounts, but optional for subaccounts."
              },
              "country" : {
                "type" : "integer",
                "description" : "User's country. This is an integer that represents the country. A list of countries and their IDs can be accessed at [/site/countries](#operation_get_a_list_of_countries)."
              },
              "source" : {
                "type" : "string",
                "description" : "Account creation source (used to track lead sources)."
              },
              "trial" : {
                "type" : "boolean",
                "description" : "If the account should be on a trial, this sets up a request for it."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "integer",
                  "description" : "The newly created account ID."
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/account/{id}" : {
      "get" : {
        "summary" : "Get account details",
        "description" : "This returns the user's account details.\n\nThe account ID may be the user's own ID, or the ID of an account that the user has ownership over.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "bounced", "company", "created", "email", "id", "mailok", "name", "phone", "position", "username" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The user's ID."
                    },
                    "username" : {
                      "type" : "string",
                      "description" : "The user's username."
                    },
                    "owner" : {
                      "required" : [ "email", "id", "name" ],
                      "type" : "object",
                      "description" : "If the account is a subaccount, this is the owner account's details.",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Owner account ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Owner account name."
                        },
                        "email" : {
                          "type" : "string",
                          "description" : "Owner account's email address."
                        }
                      }
                    },
                    "manager" : {
                      "required" : [ "email", "name" ],
                      "type" : "object",
                      "description" : "The details of the account manager assigned to the account.",
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "description" : "The account manager's name."
                        },
                        "email" : {
                          "type" : "string",
                          "description" : "The account manager's email address."
                        }
                      }
                    },
                    "position" : {
                      "type" : "string",
                      "description" : "The user's position, or job title."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "The user's name."
                    },
                    "email" : {
                      "type" : "string",
                      "description" : "The user's email address."
                    },
                    "company" : {
                      "type" : "string",
                      "description" : "The user's company."
                    },
                    "phone" : {
                      "type" : "string",
                      "description" : "The user's phone number."
                    },
                    "fax" : {
                      "type" : "string",
                      "description" : "The user's fax number."
                    },
                    "address" : {
                      "type" : "string",
                      "description" : "The user's street address."
                    },
                    "suburb" : {
                      "type" : "string",
                      "description" : "The user's suburb or city."
                    },
                    "state" : {
                      "type" : "string",
                      "description" : "The user's state."
                    },
                    "postcode" : {
                      "type" : "string",
                      "description" : "The user's postcode or ZIP code."
                    },
                    "country" : {
                      "required" : [ "code", "id", "name" ],
                      "type" : "object",
                      "description" : "The user's country.",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Country ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Country name."
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "2-letter country code."
                        }
                      }
                    },
                    "sector" : {
                      "required" : [ "id", "name" ],
                      "type" : "object",
                      "description" : "The user's industry sector.",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Sector ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Sector name."
                        }
                      }
                    },
                    "created" : {
                      "type" : "integer",
                      "description" : "UNIX timestamp of the time the account was created."
                    },
                    "bounced" : {
                      "type" : "boolean",
                      "description" : "If true, then the account's email address is marked as having bounced."
                    },
                    "mailok" : {
                      "type" : "boolean",
                      "description" : "It is OK to send email to this user."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "put" : {
        "summary" : "Update account details",
        "description" : "Update the user's account details.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "username" : {
                "type" : "string",
                "description" : "The user's username."
              },
              "name" : {
                "type" : "string",
                "description" : "The user's name."
              },
              "email" : {
                "type" : "string",
                "description" : "The user's email address."
              },
              "position" : {
                "type" : "string",
                "description" : "The user's position or job title."
              },
              "phone" : {
                "type" : "string",
                "description" : "The user's phone number."
              },
              "fax" : {
                "type" : "string",
                "description" : "The user's fax number."
              },
              "address" : {
                "type" : "string",
                "description" : "The user's street address."
              },
              "suburb" : {
                "type" : "string",
                "description" : "The user's suburb or city."
              },
              "state" : {
                "type" : "string",
                "description" : "The user's state."
              },
              "postcode" : {
                "type" : "string",
                "description" : "The user's postcode or ZIP code."
              },
              "sector" : {
                "type" : "integer",
                "description" : "The user's industry sector ID (see [/site/sectors](#operation_get_available_industry_sectors))."
              },
              "country" : {
                "type" : "integer",
                "description" : "The user's country ID (see [/site/countries](#operation_get_a_list_of_countries))."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer"
      } ]
    },
    "/account/exists/{email}" : {
      "get" : {
        "summary" : "Check if an email address is already in use",
        "description" : "This will return true value if an email address is already in use by an account.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "404" : {
            "description" : "A 404 error will be returned if the email address is not in use.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "email",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/account/password" : {
      "put" : {
        "summary" : "Reset the account password",
        "description" : "Reset the current user's password. This is used in cases where the user has forgotten their password and is unable to log in.\n\nIf the user is logged in and wishes to change their password, then use the resource at /account/{id}/password",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "token" ],
            "properties" : {
              "token" : {
                "type" : "string",
                "description" : "Password reset token. This is sent to the user via email when they request a password reset."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "changed" ],
                  "type" : "object",
                  "properties" : {
                    "changed" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "An invalid reset token was sent.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/account/password/forgot" : {
      "post" : {
        "summary" : "Get a reset token for a user's password",
        "description" : "If the user has forgotten their password, posting here will generate a reset token they can use to reset it.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "username" ],
            "properties" : {
              "username" : {
                "type" : "string",
                "description" : "The user's username."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string",
                  "description" : "A response string, indicating that a reset token was sent to the email address on file for the account."
                }
              }
            }
          },
          "400" : {
            "description" : "A 400 will be returned if no username was sent.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "A 404 will be returned if:\n\n* the username does not match an account\n* or if the account does not seem to have a valid email address on file",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/account/{id}/password" : {
      "put" : {
        "summary" : "Change the user's password",
        "description" : "Change the current user's password.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "newPassword", "oldPassword" ],
            "properties" : {
              "oldPassword" : {
                "type" : "string",
                "description" : "The user's current password."
              },
              "newPassword" : {
                "type" : "string",
                "description" : "The user's new password."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The password was successfully changed.",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "changed" ],
                  "type" : "object",
                  "properties" : {
                    "changed" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "The new password isn't long or complex enough.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "The user's current password was wrong.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "The user has a shared account (editing of details is disabled on shared accounts).",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer"
      } ]
    },
    "/account/{id}/subscriptions" : {
      "get" : {
        "summary" : "Get the user's active subscriptions",
        "description" : "This returns an object that contains objects that represent each active subscription a user has. The key of each object will be the ID of the product.\n\nIf a subscription object contains a key called \"included\" that is true (along with name and shortname), and \"email\" that may be true or false, that means that the product with that ID is an included subscription with their account - ie. AVAN and Airline Leader will always be included subscriptions, no matter the account type. If it is an actual subscription, then the object will contain far more detailed information, which is shown below.\n\nNote that the output for this call is pretty messy and unstable; it will eventually be changed to something a bit more ordered.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "object",
                  "properties" : {
                    "{prodID}" : {
                      "type" : "object",
                      "description" : "The key for each value returned is the product ID.",
                      "properties" : {
                        "subid" : {
                          "type" : "integer",
                          "description" : "The subscription ID (not the same as the product ID)."
                        },
                        "start" : {
                          "type" : "integer",
                          "description" : "UNIX timestamp of the time the subscription started."
                        },
                        "trial" : {
                          "type" : "boolean",
                          "description" : "Boolean indicating whether the subscription is a trial or not."
                        },
                        "expiry" : {
                          "type" : "integer",
                          "description" : "UNIX timestamp of the time the subscription is due to expire."
                        },
                        "users" : {
                          "type" : "integer",
                          "description" : "Number of user licences for the subscription."
                        },
                        "owner" : {
                          "type" : "integer",
                          "description" : "The ID of the subscription owner."
                        },
                        "info" : {
                          "type" : "object",
                          "description" : "If this is a paid subscription, then the info key will exist with further details.",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "This is the subscription ID. Same as above."
                            },
                            "cid" : {
                              "type" : "integer",
                              "description" : "CID is \"customer ID\" aka the owner ID of the subscription. If the user's account is a subaccount, and the subscription is assigned then this will be the ID of the owner account."
                            },
                            "username" : {
                              "type" : "string",
                              "description" : "The username of the account that owns the subscription."
                            },
                            "company" : {
                              "type" : "string",
                              "description" : "The company that owns the subscription."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "The name of the account that owns the subscription."
                            },
                            "orderid" : {
                              "type" : "integer",
                              "description" : "The order ID that the subscription is associated with."
                            },
                            "trial" : {
                              "type" : "boolean",
                              "description" : "Whether this is a trial subscription or not."
                            },
                            "prodid" : {
                              "type" : "integer",
                              "description" : "The product ID of the subscription. Same as the main object key."
                            },
                            "start" : {
                              "type" : "integer",
                              "description" : "UNIX timestamp of the subscription start date (same as main object)."
                            },
                            "expiry" : {
                              "type" : "integer",
                              "description" : "UNIX timestamp of the subscription expiry date (same as main object)."
                            },
                            "active" : {
                              "type" : "boolean",
                              "description" : "Boolean indicating whether this subscription is active or not (same as main object)."
                            },
                            "users" : {
                              "type" : "integer",
                              "description" : "Number of user licences this subscription has (same as main object)."
                            },
                            "prodname" : {
                              "type" : "string",
                              "description" : "The product name."
                            },
                            "shortname" : {
                              "type" : "string",
                              "description" : "The shortname of the product."
                            },
                            "itemname" : {
                              "type" : "string",
                              "description" : "This will be either a string or null, and is set when the product has been renamed in the original order that set up the subscription.\n\nBasically, if this is not null then treat it as the product name instead of the prodname key."
                            }
                          }
                        },
                        "email" : {
                          "type" : "boolean",
                          "description" : "Whether this subscription has a mailout component or not (ie. Fleets does not, but APAD does)."
                        },
                        "included" : {
                          "type" : "boolean",
                          "description" : "If this is an \"included\" subscription, this will be true. An included subscription will be something like AVAN or AL on all accounts, or APAD/ABD/etc for CAPA Membership accounts."
                        },
                        "shortname" : {
                          "type" : "string",
                          "description" : "The shortname of the product. This key only exists for included subscriptions. Look inside the \"info\" key otherwise."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "The name of the product. This key only exists for included subscriptions. Look inside the \"info\" key otherwise."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer"
      } ]
    },
    "/account/{id}/items" : {
      "get" : {
        "summary" : "Get a list of bought items",
        "description" : "This returns all bought items that the user has associated with the account. This will be all non-subscription items, like reports.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "url" ],
                    "type" : "object",
                    "properties" : {
                      "url" : {
                        "type" : "string",
                        "description" : "The product URL."
                      },
                      "price" : {
                        "type" : "number",
                        "description" : "The product's price. If this is a subscription, then the price will be the setup fee for the subscription."
                      },
                      "currency" : {
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "The price's currency ID."
                          },
                          "symbol" : {
                            "type" : "string",
                            "description" : "The price's currency symbol.",
                            "example" : "USD"
                          }
                        }
                      },
                      "image" : {
                        "type" : "string",
                        "description" : "URL of product image."
                      },
                      "sub" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Subscription ID."
                            },
                            "price" : {
                              "type" : "number",
                              "description" : "Subscription price for the specified period."
                            },
                            "period" : {
                              "type" : "integer",
                              "description" : "Subscription period (in months)."
                            }
                          }
                        }
                      },
                      "id" : {
                        "type" : "integer",
                        "description" : "Product ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Product name."
                      },
                      "shortdesc" : {
                        "type" : "string",
                        "description" : "Short description of the product."
                      },
                      "description" : {
                        "type" : "string",
                        "description" : "Description of the product."
                      },
                      "mailout" : {
                        "type" : "boolean",
                        "description" : "Boolean, if true then this product has a mailout component (eg. APAD)."
                      },
                      "type" : {
                        "type" : "string",
                        "description" : "Product type. At the moment this contains only 0 or 1: 1 indicates the product is a report.",
                        "enum" : [ "0", "1" ]
                      },
                      "requires" : {
                        "type" : "integer",
                        "description" : "If this product is an addon to another product, this is the ID of the product that is required."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/account/{id}/mailouts" : {
      "put" : {
        "summary" : "Update user's subscription email preferences",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "array",
            "description" : "Note that the user's mailouts will be replaced with the details of this object. This means if a product is missing from the list or has subscribe set to false, it will be deleted.",
            "items" : {
              "required" : [ "id", "subscribe" ],
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Product ID."
                },
                "subscribe" : {
                  "type" : "boolean",
                  "description" : "Whether to receive email for this product or not."
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "updated" ],
                  "type" : "object",
                  "properties" : {
                    "updated" : {
                      "type" : "boolean",
                      "description" : "If the preferences have successfully updated, this will be true."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "You'll get a 403 if the user has a shared account.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer"
      } ]
    },
    "/account/{id}/mailouts/{prodid}" : {
      "delete" : {
        "summary" : "Unsubscribe from a mailout",
        "description" : "Making a DELETE request to this resource will unsubscribe the user from a mailout. It does not require authentication, and its intention is to be used for unsubscribe links in emails.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "description" : "A 200 response will always be received whether or not the user was already subscribed to the publication.",
              "properties" : {
                "data" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer"
      }, {
        "name" : "prodid",
        "in" : "path",
        "required" : true,
        "type" : "integer"
      } ]
    },
    "/account/{id}/subaccounts" : {
      "get" : {
        "summary" : "Get a list of the user's subaccounts",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Account"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "The user's ID."
      } ]
    },
    "/shop" : {
      "get" : {
        "summary" : "List all shop items",
        "description" : "Use this resource to pull down a list of items available for purchase/subscription. The list returned will be alphabetically ordered by product name.",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Number of results to return.",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based index of the result page number.",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/shop/{itemid}" : {
      "get" : {
        "summary" : "Get a shop item",
        "description" : "Returns a single shop item based on the ID provided.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "itemid",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Shop item ID.\n\nThis is a bit of a weird situation. You can either use the shop item ID, or the shortname value for the shop item. Both will return the same result. Note that this only applies to this resource and not file downloads.",
        "x-example" : "39"
      } ]
    },
    "/shop/{itemid}/files/{filename}" : {
      "get" : {
        "summary" : "Download a file from an item",
        "description" : "If a shop item had files available for download, make a get request to this URL and it will respond with the file contents.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The content returned will be the file content. There is no JSON object returned on a successful result, only pure file data.",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "description" : "The content type header will change depending on the format of the file being downloaded.",
                "x-example" : "application/pdf"
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "itemid",
        "in" : "path",
        "required" : true,
        "type" : "string"
      }, {
        "name" : "filename",
        "in" : "path",
        "required" : true,
        "type" : "string"
      } ]
    },
    "/shop/checkout" : {
      "post" : {
        "summary" : "Make a purchase",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "country", "email", "items", "method", "name", "suburb" ],
            "properties" : {
              "items" : {
                "type" : "array",
                "description" : "Array of items to purchase.",
                "items" : {
                  "required" : [ "id", "quantity" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Item ID."
                    },
                    "quantity" : {
                      "type" : "integer",
                      "description" : "Item quantity.",
                      "minimum" : 1
                    },
                    "period" : {
                      "type" : "integer",
                      "description" : "Item subscription ID."
                    }
                  }
                }
              },
              "coupon" : {
                "type" : "string",
                "description" : "Discount coupon code for the order."
              },
              "method" : {
                "type" : "integer",
                "description" : "The payment method. These are:\n\n| ID | Method |\n| ----- | ----- |\n| 1 | Credit card |\n| 2 | Bank Transfer |\n| 3 | Cheque |"
              },
              "name" : {
                "type" : "string",
                "description" : "The user's name. This can be the same as the user's name, or a different name. It is used for invoicing."
              },
              "email" : {
                "type" : "string",
                "description" : "The user's email address. If this is not the same as the account's email address, then the invoice will be sent to both the account's email address and the email address listed here."
              },
              "suburb" : {
                "type" : "string",
                "description" : "The user's suburb, for invoicing purposes."
              },
              "postcode" : {
                "type" : "string",
                "description" : "The user's postcode, for invoicing."
              },
              "country" : {
                "type" : "integer",
                "description" : "The user's country ID. Get a list of countries from [/site/countries](#operation_get_a_list_of_countries)."
              },
              "ccNumber" : {
                "type" : "integer",
                "description" : "The user's credit card number."
              },
              "ccExpiry" : {
                "type" : "string",
                "description" : "The user's credit card expiry date. It is in MM/YY format.",
                "example" : "05/17"
              },
              "ccCVV" : {
                "type" : "integer",
                "description" : "The card verification value. This is normally a three-digit number on the back of the user's credit card."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "description" : "Upon a successful order completion, the below data will be returned. In addition to this, the user will receive an email containing a PDF of their invoice, and (optionally) a receipt if the order has been paid by credit card. If the order contains file downloads, they will be listed within the email received as well.",
              "properties" : {
                "data" : {
                  "required" : [ "id", "paid" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The order ID."
                    },
                    "paid" : {
                      "type" : "boolean",
                      "description" : "Whether the order has been paid or not. This will be true if the order was paid by credit card, otherwise it will be false and will remain unpaid until payment has been received."
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request results will happen if the items in the cart are of a different currency, the user does not have a required item in their cart or account, or the credit card charge failed.",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/shop/checkout/totals" : {
      "get" : {
        "summary" : "Calculate total values of items in cart",
        "description" : "Given a list of items and a user's country and payment method, this will calculate what the total charged to the user will be.",
        "parameters" : [ {
          "name" : "cart",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The cart parameter should contain a comma separated list of cart items, of which the parameters themselves are separated by slashes. There should always be three parameters.\n\nA cart item looks like this: `39/1/30`\n\n* The first parameter is the ID of the product\n* The second parameter is the quantity required (if it's a subscription product, then this is the number of licences required).\n* If it's a subscription, then this is the subscription ID of the product. If it is not a subscription, this value should be 0.",
          "x-example" : "39/1/30"
        }, {
          "name" : "coupon",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "If the user has a discount code, this will be it."
        }, {
          "name" : "country",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "description" : "This is the user's country ID and it is used to calculate whether tax should be applied to the order or not. A list of country IDs can be pulled down at [/site/countries](#operation_get_a_list_of_countries)."
        }, {
          "name" : "method",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "The payment method selected.\n\n| ID | Method |\n| ----- | ----- |\n| 1 | Credit card |\n| 2 | Bank transfer |\n| 3 | Cheque |"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "name", "value" ],
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "The name of the total.",
                        "example" : "Subtotal"
                      },
                      "value" : {
                        "type" : "number",
                        "description" : "The value of the total."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/alerts/preview" : {
      "post" : {
        "summary" : "Preview an Alert",
        "description" : "If you need an idea of the kind of results that will be returned when building an Alert, that can be done here.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Alert"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/alerts/{id}" : {
      "get" : {
        "summary" : "List Alerts for an account",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "alerts", "freq" ],
                  "type" : "object",
                  "properties" : {
                    "freq" : {
                      "required" : [ "freq", "sendat" ],
                      "type" : "object",
                      "description" : "Sending frequency details.",
                      "properties" : {
                        "freq" : {
                          "type" : "integer",
                          "description" : "The frequency that Alerts will be emailed to the user. The possible values are:\n\n| Value | Type | Notes |\n| ----- | ----- | ----- |\n| 0 | Never | Never send an email. Useful if the customer is only using the RSS feeds or app. |\n| 1 | Live | Send Alerts emails immediately for each article published. Unless the user has very specific filters set, this will result in a deluge of email. |\n| 2 | Hourly | Send Alerts hourly, on the hour. |\n| 3 | Daily | Send Alerts daily, at the time specified in the sendat parameter. |\n| 4 | Weekly | Send Alerts weekly, usually at midnight UTC on a Monday morning. |\n| 5 | Monthly | Send Alerts monthly. |"
                        },
                        "sendat" : {
                          "type" : "string",
                          "description" : "If an Alert is being sent daily, this is the time of day that it will be sent (based on UTC a timezone)."
                        }
                      }
                    },
                    "alerts" : {
                      "type" : "array",
                      "description" : "An array of Alerts, sorted by the user's preferences.",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Create a new Alert",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Alert"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "id", "uid" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The newly created Alert's ID."
                    },
                    "uid" : {
                      "type" : "string",
                      "description" : "The newly created Alert's unique identifier (for RSS feeds)."
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "put" : {
        "summary" : "Update user's Alerts",
        "description" : "This will batch update/replace a user's alerts. The order of the array sent to the server will dictate the sort order of the user's Alerts. If an Alert is not sent to the server, it will be deleted.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "alerts" : {
                "type" : "array",
                "description" : "The user's new Alerts, ordered. If this key is not sent, no Alerts will be changed.",
                "items" : {
                  "$ref" : "#/definitions/Alert"
                }
              },
              "freq" : {
                "required" : [ "freq", "sendat" ],
                "type" : "object",
                "description" : "If you want to change Alert frequency settings, send this key.",
                "properties" : {
                  "freq" : {
                    "type" : "integer",
                    "description" : "The sending frequency of the user's Alerts.\n\n| Value | Type | Notes |\n| ----- | ----- | ----- |\n| 0 | Never | Never send an email. Useful if the customer is only using the RSS feeds or app. |\n| 1 | Live | Send Alerts emails immediately for each article published. Unless the user has very specific filters set, this will result in a deluge of email. |\n| 2 | Hourly | Send Alerts hourly, on the hour. |\n| 3 | Daily | Send Alerts daily, at the time specified in the sendat parameter. |\n| 4 | Weekly | Send Alerts weekly, usually at midnight UTC on a Monday morning. |\n| 5 | Monthly | Send Alerts monthly. |"
                  },
                  "sendat" : {
                    "type" : "string",
                    "description" : "The time to send Alerts if the frequency is set to daily. UTC timezone."
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200"
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "The user's ID."
      } ]
    },
    "/alerts/{id}/{alertid}" : {
      "get" : {
        "summary" : "List articles for an Alert",
        "description" : "This will return a list of articles that match the specified alert, in reverse-chronological order.",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Maximum number of results to return.",
          "default" : 50,
          "maximum" : 100
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based result page index.",
          "default" : 0
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Don't show alerts newer than this time.",
          "default" : "Current time"
        }, {
          "name" : "nolimit",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "By default, searches are restricted to stories from within the past 3 months, in order to keep response times fast. If you want to go back further, send this parameter."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "put" : {
        "summary" : "Update an Alert",
        "description" : "This changes the search parameters of an Alert.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Alert"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "Delete an Alert",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "integer"
                }
              }
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "The user's account ID."
      }, {
        "name" : "alertid",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "The user's Alert ID."
      } ]
    },
    "/articles" : {
      "get" : {
        "summary" : "Get a list of articles",
        "description" : "Returns an array of articles in reverse-chronological order.",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Maximum number of articles to return.",
          "default" : 10,
          "maximum" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based article page index.",
          "default" : 0,
          "minimum" : 0
        }, {
          "name" : "categories",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "A comma-separated list of category IDs to filter by.\n\nThis will do an intersect merge on the tags that feature within the categories, meaning that only tags included in all the categories listed will be used for filtering.\n\n:exclamation: If a categories parameter is included, any alert parameter will be ignored."
        }, {
          "name" : "alert",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Either an Alert ID or unique idenfitier for an Alert to filter the results by."
        }, {
          "name" : "profileid",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "If you want to filter results by profile, then this will be the profile ID that you want to filter by.\n\nBoth profile ID and profile type are required for profile filtering."
        }, {
          "name" : "profiletype",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "If you want to filter results by profile, then this will be the profile type that you want to filter by.\n\nBoth profile ID and profile type are required for profile filtering."
        }, {
          "name" : "linked",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "If this is set, then the content returned will be automatically linked to CAPA profiles on relevant keywords."
        }, {
          "name" : "types",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Comma-separated list of news type IDs to return. This will override anything sent in the \"type\" parameter.\n\n| ID | Type | Description |\n| ----- | ----- | ----- |\n| 1 | Analysis | Analysis articles. |\n| 2 | Press Releases | CAPA press releases. |\n| 3 | Direct News Sources | Other company press releases. |\n| 4 | Share Market Performance | Legacy/unused. |\n| 5 | Blog | Legacy/unused. |\n| 6 | Updates | CAPA updates. Somehow different to CAPA press releases. |\n| 7 | Financials | Legacy/unused. |\n| 8 | Traffic | Legacy/unused.\n| 9 | Airline Leader | Articles from Airline Leader. |"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "The type of news to return. This is just an easier way of specifying news types than using the \"types\" parameter.",
          "enum" : [ "analysis", "direct-news-sources", "press-releases", "airline-leader" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "description" : "Note that if a premium article has been requested and an authorization header has either not been sent or the user does not have membership or other access to the article, then the \"article\" key will not be included in the output.",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Article"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/articles/{id}" : {
      "get" : {
        "summary" : "Get an article",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/definitions/Article"
                },
                "errors" : {
                  "type" : "array",
                  "description" : "If the user hasn't got authorization to download the full version of a premium article, an error key will be returned along with the main data.",
                  "items" : {
                    "required" : [ "message", "status" ],
                    "type" : "object",
                    "properties" : {
                      "message" : {
                        "type" : "string",
                        "enum" : [ "This is a premium article that requires CAPA Membership to view." ]
                      },
                      "status" : {
                        "type" : "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Article ID."
      } ]
    },
    "/articles/{id}/pdf" : {
      "get" : {
        "summary" : "Generate a PDF of an article",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The binary data for a PDF containing the article will be returned",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "enum" : [ "application/pdf" ]
              }
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "500" : {
            "description" : "Status 500",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Article ID."
      } ]
    },
    "/articles/{id}/{filename}" : {
      "get" : {
        "summary" : "Download an article attachment",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A successful request will result in a binary stream of the file's contents being sent to the user.",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "x-example" : "application/pdf"
              }
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Article ID."
      }, {
        "name" : "filename",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Attached file to download."
      } ]
    },
    "/news" : {
      "get" : {
        "summary" : "Get a list of news briefs",
        "description" : "Returns an array of news briefs in reverse-chronological order.",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Maximum number of results to return.",
          "default" : 50,
          "maximum" : 50
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based page index number.",
          "default" : 0
        }, {
          "name" : "categories",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "A comma-separated list of category IDs to filter by.\n\nThis will do an intersect merge on the tags that feature within the categories, meaning that only tags included in all the categories listed will be used for filtering.\n\n:exclamation: If a categories parameter is included, any alert parameter will be ignored.",
          "x-example" : "23,5,20,85"
        }, {
          "name" : "alert",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Either an Alert ID or unique idenfitier for an Alert to filter the results by."
        }, {
          "name" : "profileid",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "If you want to filter results by profile, then this will be the profile ID that you want to filter by.\n\nBoth profile ID and profile type are required for profile filtering."
        }, {
          "name" : "profiletype",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "If you want to filter results by profile, then this will be the profile type that you want to filter by.\n\nBoth profile ID and profile type are required for profile filtering."
        }, {
          "name" : "linked",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "If this is set, then the content returned will be automatically linked to CAPA profiles on relevant keywords."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/news/{id}" : {
      "get" : {
        "summary" : "Get a news brief",
        "parameters" : [ {
          "name" : "linked",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "If this flag is set, then the news brief content will be automatically linked to CAPA profiles on relevant keywords."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "News brief ID."
      } ]
    },
    "/video" : {
      "get" : {
        "summary" : "List available videos",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Maximum number of results to return.",
          "default" : 50,
          "maximum" : 50
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based page index number."
        }, {
          "name" : "categories",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "A comma-separated list of category IDs to filter by.\n\nThis will do an intersect merge on the tags that feature within the categories, meaning that only tags included in all the categories listed will be used for filtering.\n\n:exclamation: If a categories parameter is included, any alert parameter will be ignored.",
          "x-example" : "23,5,20,85"
        }, {
          "name" : "profileid",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "If you want to filter results by profile, then this will be the profile ID that you want to filter by.\n\nBoth profile ID and profile type are required for profile filtering."
        }, {
          "name" : "profiletype",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "If you want to filter results by profile, then this will be the profile type that you want to filter by.\n\nBoth profile ID and profile type are required for profile filtering."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Video"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/video/{id}" : {
      "get" : {
        "summary" : "Get a video",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/definitions/Video"
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Video ID."
      } ]
    },
    "/reports" : {
      "get" : {
        "summary" : "Get a list of reports",
        "description" : "This will return a list of both free and paid reports. Note that pulling down more detailed info on a paid report requires using its ID as a shop item ID and [getting info from there](#operation_get_a_shop_item).",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Maximum number of results to return.",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based page index of results.",
          "default" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Report"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/report/{id}" : {
      "get" : {
        "summary" : "Get free report info",
        "description" : "This gives back info on a free report. If you want to retrieve details for a paid report, you need to [get it from the shop](#operation_get_a_shop_item). Using a paid ID to retrive data from here will result in a mismatch.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/definitions/Report"
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Report ID."
      } ]
    },
    "/reports/{id}/download" : {
      "get" : {
        "summary" : "Download a free report",
        "description" : "This returns a free report. Paid reports cannot be downloaded in this way - they need to be [downloaded as a shop item](#operation_download_a_file_from_an_item).",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A successful response will contain the binary file contents.",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "x-example" : "application/pdf"
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Report ID."
      } ]
    },
    "/events/upcoming" : {
      "get" : {
        "summary" : "List upcoming events",
        "description" : "This will return a list of upcoming events, in ascending  chronological order.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/Event"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/events/sponsorship" : {
      "post" : {
        "summary" : "Send an event sponsorship enquiry",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "company", "email", "name", "phone", "position" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "User's name."
              },
              "company" : {
                "type" : "string",
                "description" : "User's company."
              },
              "position" : {
                "type" : "string",
                "description" : "User's position/job title."
              },
              "email" : {
                "type" : "string",
                "description" : "User's email address."
              },
              "phone" : {
                "type" : "string",
                "description" : "User's phone number."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string",
                  "enum" : [ "Successfully posted form." ]
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/publications" : {
      "get" : {
        "summary" : "Get a list of publications",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "archived", "current" ],
                  "type" : "object",
                  "properties" : {
                    "current" : {
                      "type" : "array",
                      "description" : "Current publications.",
                      "items" : {
                        "required" : [ "description", "freqnum", "frequency", "hidden", "id", "latest", "name", "shortname" ],
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Publication ID."
                          },
                          "shortname" : {
                            "type" : "string",
                            "description" : "Short unique lowercase abbreviation for the publication, mostly for use in URLs."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Publication name."
                          },
                          "description" : {
                            "type" : "string",
                            "description" : "HTML description of the publication."
                          },
                          "hidden" : {
                            "type" : "boolean",
                            "description" : "Flag indicating whether or not this publication should be publicly listed."
                          },
                          "frequency" : {
                            "type" : "string",
                            "description" : "Description of the publication frequency.",
                            "example" : "Daily"
                          },
                          "freqnum" : {
                            "type" : "integer",
                            "description" : "A frequency ID. They look like this:\n\n| ID | Frequency |\n| ----- | ----- |\n| 0 | Daily |\n| 1 | Weekly |\n| 2 | Fortnightly |\n| 3 | Monthly |\n| 4 | Bi-monthly |\n| 5 | Annually |\n| 6 | Once only |"
                          },
                          "latest" : {
                            "required" : [ "date", "description", "filename", "id", "issue", "title" ],
                            "type" : "object",
                            "description" : "Info on the most recent issue.",
                            "properties" : {
                              "id" : {
                                "type" : "integer",
                                "description" : "Issue ID (not to be confused with issue number)."
                              },
                              "filename" : {
                                "type" : "string",
                                "description" : "The filename of the issue."
                              },
                              "date" : {
                                "type" : "integer",
                                "description" : "UNIX timestamp of the issue's publication date."
                              },
                              "title" : {
                                "type" : "string",
                                "description" : "Issue title (generally blank)"
                              },
                              "description" : {
                                "type" : "string",
                                "description" : "HTML description of the issue (generally blank)."
                              },
                              "issue" : {
                                "type" : "integer",
                                "description" : "Issue number (not to be confused with issue ID)."
                              }
                            }
                          }
                        }
                      }
                    },
                    "archived" : {
                      "type" : "array",
                      "description" : "Old archived publications.",
                      "items" : {
                        "required" : [ "name", "shortname" ],
                        "type" : "object",
                        "properties" : {
                          "shortname" : {
                            "type" : "string",
                            "description" : "Short unique lowercase abbreviation for the publication, mostly for use in URLs."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Name of the publication."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/publications/mailouts" : {
      "get" : {
        "summary" : "Get a list of publications delivered by email",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "An array of publications that are delivered regularly via email.",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Publication ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Publication name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/publications/{id}" : {
      "get" : {
        "summary" : "List issues for a current publication",
        "parameters" : [ {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Maximum number of results to return.",
          "default" : 10
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Zero-based page index of results.",
          "default" : "0"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "An array of issues.",
                  "items" : {
                    "$ref" : "#/definitions/Issue"
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Publication ID."
      } ]
    },
    "/publications/{id}/{issueid}" : {
      "get" : {
        "summary" : "Get info for an issue",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "$ref" : "#/definitions/Issue"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Publication ID."
      }, {
        "name" : "issueid",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Issue ID."
      } ]
    },
    "/publications/{id}/{issueid}/download" : {
      "get" : {
        "summary" : "Download an issue",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A binary stream of data that makes up the publication issue.",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "x-example" : "application/pdf"
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Publication ID."
      }, {
        "name" : "issueid",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Issue ID."
      } ]
    },
    "/publications/archived/{shortname}" : {
      "get" : {
        "summary" : "Get a list of issues for an archived publication",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "A reverse-chronological array listing every filename for every issue of the archived publication.",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "shortname",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Publication shortname - a unique text abbreviation identifying the publication."
      } ]
    },
    "/publications/archived/{shortname}/{filename}" : {
      "get" : {
        "summary" : "Download an issue from an archived publication",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A successful request will result in a stream of binary data sent to the client.",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "x-example" : "application/pdf"
              }
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "shortname",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Publication shortname - a unique text abbreviation identifying the publication."
      }, {
        "name" : "filename",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Publication filename."
      } ]
    },
    "/data/profiles" : {
      "get" : {
        "summary" : "Search for a profile ID",
        "parameters" : [ {
          "name" : "term",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Profile name to search for. Any profiles containing this string will be returned."
        }, {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Profile IATA/ICAO/country code. If this is supplied, \"term\" will be ignored and only profiles that exactly match the specified code will be returned."
        }, {
          "name" : "start",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "If this is sent, then the \"term\" search will only match profiles that *start* with the term string, instead of profiles that contain the term string."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/data/profiles/id" : {
      "get" : {
        "summary" : "Convert a shorturl + type string to profile ID",
        "description" : "This is used to figure out a profile ID based on profile URL components. Only really useful for the CAPA site itself.",
        "parameters" : [ {
          "name" : "shorturl",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The shorturl string.\n\nGiven a URL of `...`, the shorturl component would be `qantas-airways-qf`."
        }, {
          "name" : "type",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The type string.\n\nGiven a URL of `...`, the type would be `airlines`."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "id", "type" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Profile ID."
                    },
                    "type" : {
                      "type" : "integer",
                      "description" : "Profile type ID."
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/data/profiles/{type}/{id}" : {
      "get" : {
        "summary" : "Get basic info for a profile",
        "description" : "This returns basic profile details - a short description, IATA/ICAO codes, location, etc. There are a few fields common to all profiles, however the resulting object will vary greatly depending on the profile type.\n\n:exclamation: Profile IDs do not change - they will remain the same throughout their lifetime. The exception is in the rare event of a merge, when duplicate profiles are combined together. This is an administrative thing unrelated to airline mergers and does not happen often.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "bio", "category", "currency", "financial_year_end", "name", "stockid", "tags", "traffic_year_end", "url" ],
                  "type" : "object",
                  "properties" : {
                    "iata" : {
                      "type" : "string",
                      "description" : "Profile IATA code.\n\nApplies to:\n* airlines\n* airports"
                    },
                    "icao" : {
                      "type" : "string",
                      "description" : "Profile ICAO code.\n\nApplies to:\n* airlines\n* airports"
                    },
                    "duplicate" : {
                      "type" : "boolean",
                      "description" : "Whether or not the profile's IATA code is a controlled duplicate.\n\nApplies to:\n* airlines"
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Name of the profile."
                    },
                    "efrom" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Date that the company was effective (\"active\") from. A company that is currently active will have an efrom date of null or the date it started operating. If the date is in the future, it means the company has not started operating yet.\n\nApplies to:\n* airlines"
                    },
                    "eto" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Similar to efrom, this is the date that the company ceased operations. If it is null, it is assumed the company is active. If it is a date in the past, this is the date it ceased operating. If it is a future date, this is the date it will cease operating.\n\nApplies to:\n* airlines"
                    },
                    "current" : {
                      "type" : "boolean",
                      "description" : "An easier way to tell if an airline is active or not - if it's true then it's an active airline.\n\nApplies to:\n* airlines"
                    },
                    "bizmodel" : {
                      "type" : "string",
                      "description" : "Business model of the profile.\n\nApplies to:\n* airlines"
                    },
                    "category" : {
                      "type" : "integer",
                      "description" : "News/analysis should match articles within this category."
                    },
                    "stockid" : {
                      "type" : "integer",
                      "description" : "The ID number of the stock ticker."
                    },
                    "address" : {
                      "type" : "string",
                      "description" : "The address of the profile. Typically a company's headquarters.\n\nApplies to:\n* airlines\n* airports"
                    },
                    "hub" : {
                      "required" : [ "id", "name", "type", "url" ],
                      "type" : "object",
                      "description" : "If this is an airline profile, its main hub details are here.\n\nApplies to:\n* airlines",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Hub profile ID."
                        },
                        "type" : {
                          "type" : "string",
                          "description" : "Hub profile type ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Hub name."
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "Hub profile URL."
                        },
                        "location" : {
                          "required" : [ "latitude", "longitude" ],
                          "type" : "object",
                          "properties" : {
                            "latitude" : {
                              "type" : "number",
                              "description" : "Hub latitude."
                            },
                            "longitude" : {
                              "type" : "number",
                              "description" : "Hub longitude."
                            }
                          }
                        }
                      }
                    },
                    "website" : {
                      "type" : "string",
                      "description" : "Profile's external company URL."
                    },
                    "bio" : {
                      "type" : "string",
                      "description" : "A short HTML description of the profile."
                    },
                    "currency" : {
                      "type" : "string",
                      "description" : "If the profile reports financials, the currency it reports in.",
                      "default" : "USD"
                    },
                    "financial_year_end" : {
                      "type" : "integer",
                      "description" : "The month number that the profile's financial year ends in.\n\n:exclamation: Note that this does not guarantee that financial data is available for the profile."
                    },
                    "traffic_year_end" : {
                      "type" : "integer",
                      "description" : "The month number that the profile's traffic reporting year ends in.\n\n:exclamation: Note that this does not guarantee that traffic data is available for the profile."
                    },
                    "startup" : {
                      "type" : "boolean",
                      "description" : "Whether or not CAPA classifies this profile as a startup.\n\nApplies to:\n* airlines"
                    },
                    "startupdate" : {
                      "type" : "string",
                      "description" : "If this is a startup profile, this is the date that CAPA expects the airline to start operations. Note that this is a string and not a date field as the contents will vary depending on how accurate we can get.\n\nApplies to:\n* airlines"
                    },
                    "failedstartup" : {
                      "type" : "boolean",
                      "description" : "True if this profile is classified as a failed startup.\n\nApplies to:\n* airlines"
                    },
                    "country" : {
                      "required" : [ "code", "id", "name", "schengen", "url" ],
                      "type" : "object",
                      "description" : "If the profile has a country associated with it, this is the country details.\n\nApplies to:\n* airlines\n* airports",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Country profile ID."
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "2-letter country code."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Country name."
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "Country profile URL."
                        },
                        "schengen" : {
                          "type" : "boolean",
                          "description" : "True if this country is part of the Schengen Agreement."
                        }
                      }
                    },
                    "region" : {
                      "required" : [ "id", "name" ],
                      "type" : "object",
                      "description" : "Region info for the profile.\n\nApplies to:\n* airlines\n* airports",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Region ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Region name."
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "3-letter region code."
                        }
                      }
                    },
                    "carriesfreight" : {
                      "type" : "boolean",
                      "description" : "On airline profiles, this will be true if the airline carries freight.\n\nApplies to:\n* airlines"
                    },
                    "group" : {
                      "required" : [ "currency", "financial_year_end", "id", "majority", "name", "traffic_year_end", "type", "url" ],
                      "type" : "object",
                      "description" : "If the airline is part of an airline group, here is the group details.\n\nApplies to:\n* airlines",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Airline group ID."
                        },
                        "type" : {
                          "type" : "integer",
                          "description" : "Airline group type ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Airline group name."
                        },
                        "majority" : {
                          "type" : "boolean",
                          "description" : "True if the airline group is a majority owner of this profile."
                        },
                        "financial_year_end" : {
                          "type" : "integer",
                          "description" : "Month number that the airline group's financial year ends."
                        },
                        "traffic_year_end" : {
                          "type" : "integer",
                          "description" : "Month number that the airline group's traffic year ends."
                        },
                        "currency" : {
                          "type" : "string",
                          "description" : "Currency that the airline's financials are in."
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "Airline group profile URL."
                        }
                      }
                    },
                    "alliance" : {
                      "required" : [ "id", "joined", "name", "status", "type", "url" ],
                      "type" : "object",
                      "description" : "Applies to:\n* airlines",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Alliance profile ID."
                        },
                        "type" : {
                          "type" : "integer",
                          "description" : "Alliance profile type."
                        },
                        "joined" : {
                          "type" : "integer",
                          "description" : "Year that the airline joined this alliance."
                        },
                        "status" : {
                          "type" : "string",
                          "description" : "Airline's status within the alliance."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Alliance name."
                        },
                        "url" : {
                          "type" : "string",
                          "description" : "Alliance profile URL."
                        }
                      }
                    },
                    "ownership" : {
                      "type" : "string",
                      "description" : "String describing the profile's ownership status.\n\nApplies to:\n* airlines"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "String describing the airline's status.\n\nApplies to:\n* airlines"
                    },
                    "network" : {
                      "required" : [ "domestic", "international" ],
                      "type" : "object",
                      "description" : "Applies to:\n* airlines\n* airports",
                      "properties" : {
                        "domestic" : {
                          "type" : "boolean",
                          "description" : "True if this airline has a domestic network."
                        },
                        "international" : {
                          "type" : "string",
                          "description" : "True if this airline has an international network."
                        }
                      }
                    },
                    "image" : {
                      "type" : "string",
                      "description" : "Profile image (will most likely be a logo or a flag). [More information on resizing images](#text_resizing_images). Note that the image URL will always end with a question mark followed by a number - this is so cached old images are not served up by accident."
                    },
                    "tags" : {
                      "type" : "array",
                      "description" : "Tags that news/analysis in the profile should match. Note that these are merged with any tags found in the `category` key.",
                      "items" : {
                        "type" : "string"
                      }
                    },
                    "trafficsource" : {
                      "type" : "string",
                      "description" : "String describing where the traffic reports for this profile are sourced from.\n\nApplies to:\n* airports"
                    },
                    "city" : {
                      "required" : [ "code", "id", "name", "others", "state" ],
                      "type" : "object",
                      "description" : "Applies to:\n* airports",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "City ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "City name."
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "City IATA code."
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "City state."
                        },
                        "others" : {
                          "type" : "array",
                          "description" : "Array of other airports located in the same city.",
                          "items" : {
                            "required" : [ "iata", "icao", "id", "name" ],
                            "type" : "object",
                            "properties" : {
                              "id" : {
                                "type" : "integer",
                                "description" : "Airport profile ID."
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Airport profile name."
                              },
                              "iata" : {
                                "type" : "string",
                                "description" : "Airport IATA code."
                              },
                              "icao" : {
                                "type" : "string",
                                "description" : "Airport ICAO code."
                              },
                              "url" : {
                                "type" : "string",
                                "description" : "Airport profile URL."
                              }
                            }
                          }
                        }
                      }
                    },
                    "disabled" : {
                      "type" : "boolean",
                      "description" : "True if this profile is disabled.\n\nApplies to:\n* airports"
                    },
                    "runways" : {
                      "type" : "array",
                      "description" : "Applies to:\n* airports",
                      "items" : {
                        "required" : [ "area", "length", "width" ],
                        "type" : "object",
                        "properties" : {
                          "length" : {
                            "type" : "string",
                            "description" : "Length (in metres) of the runway."
                          },
                          "width" : {
                            "type" : "string",
                            "description" : "Width (in metres) of the runway."
                          },
                          "area" : {
                            "type" : "string",
                            "description" : "Area (square metres) of the runway."
                          }
                        }
                      }
                    },
                    "primary" : {
                      "type" : "boolean",
                      "description" : "True if this is a primary airport.\n\nApplies to:\n* airports"
                    },
                    "code" : {
                      "type" : "string",
                      "description" : "Country or region code.\n\nApplies to:\n* countries\n* regions\n* metaregions"
                    },
                    "location" : {
                      "required" : [ "latitude", "longitude" ],
                      "type" : "object",
                      "properties" : {
                        "latitude" : {
                          "type" : "number",
                          "description" : "Latitude of where this profile is located.\n\nApplies to:\n* airports\n* countries\n* regions"
                        },
                        "longitude" : {
                          "type" : "number",
                          "description" : "Longitude of where this profile is located.\n\nApplies to:\n* airports\n* countries\n* regions"
                        }
                      }
                    },
                    "metaregion" : {
                      "required" : [ "id", "name" ],
                      "type" : "object",
                      "description" : "Metaregion info.\n\nApplies to:\n* regions",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Metaregion ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Metaregion name."
                        }
                      }
                    },
                    "fullname" : {
                      "type" : "string",
                      "description" : "If this key exists, it is the unabbreviated name of the profile. For example, the `name` key for the ACI profile is **ACI**, but the `fullname` key is **Airports Council International (ACI World)**."
                    },
                    "subsidiaries" : {
                      "type" : "array",
                      "description" : "An array containing details of the group's subsidiaries.\n\nApplies to:\n* airline groups",
                      "items" : {
                        "required" : [ "iata", "icao", "id", "majority", "name", "type", "url" ],
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Airline profile ID."
                          },
                          "type" : {
                            "type" : "integer",
                            "description" : "Airline profile type."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Airline name."
                          },
                          "iata" : {
                            "type" : "string",
                            "description" : "Airline IATA code."
                          },
                          "icao" : {
                            "type" : "string",
                            "description" : "Airline ICAO code."
                          },
                          "majority" : {
                            "type" : "string",
                            "description" : "True if the group has a majority ownership of this airline."
                          },
                          "url" : {
                            "type" : "string",
                            "description" : "Airline profile URL."
                          }
                        }
                      }
                    },
                    "founded" : {
                      "type" : "integer",
                      "description" : "Year the alliance was founded.\n\nApplies to:\n* alliances"
                    },
                    "sector" : {
                      "required" : [ "id", "name" ],
                      "type" : "object",
                      "description" : "Applies to:\n* suppliers",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Industry sector ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Industry sector name."
                        }
                      }
                    },
                    "airports" : {
                      "type" : "array",
                      "description" : "Airports the investor has an interest in.\n\nApplies to:\n* investors",
                      "items" : {
                        "required" : [ "iata", "icao", "id", "location", "name", "type", "url" ],
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Airport ID."
                          },
                          "type" : {
                            "type" : "integer",
                            "description" : "Airport type ID."
                          },
                          "iata" : {
                            "type" : "string",
                            "description" : "Airport IATA code."
                          },
                          "icao" : {
                            "type" : "string",
                            "description" : "Airport ICAO code."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Airport name."
                          },
                          "url" : {
                            "type" : "string",
                            "description" : "Airport profile URL."
                          },
                          "location" : {
                            "required" : [ "latitude", "longitude" ],
                            "type" : "object",
                            "description" : "Airport location.",
                            "properties" : {
                              "latitude" : {
                                "type" : "number",
                                "description" : "Airport latitude."
                              },
                              "longitude" : {
                                "type" : "number",
                                "description" : "Airport longitude."
                              }
                            }
                          }
                        }
                      }
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Investor type.\n\nApplies to:\n* investors"
                    },
                    "investment" : {
                      "type" : "integer",
                      "description" : "Amount of investment (USD) going into the airport.\n\nApplies to:\n* new airports"
                    },
                    "owner" : {
                      "type" : "string",
                      "description" : "Airport owner name."
                    },
                    "throughput" : {
                      "type" : "array",
                      "description" : "Expected PAX throughput. If this array has two entries, the first one is the initial throughput, and the last one is the expected throughput once completed. If there's only one item in the array then it's the throughput once completed.\n\nApplies to:\n* new airports",
                      "items" : {
                        "type" : "integer"
                      }
                    },
                    "facilitysize" : {
                      "type" : "string",
                      "description" : "Facility size.\n\nApplies to:\n* new airports"
                    },
                    "cargovolume" : {
                      "type" : "string",
                      "description" : "Expected cargo volume at the airport.\n\nApplies to:\n* new airports"
                    },
                    "terminal" : {
                      "required" : [ "area", "length", "width" ],
                      "type" : "object",
                      "description" : "Terminal details.\n\nApplies to:\n* new airports",
                      "properties" : {
                        "width" : {
                          "type" : "integer",
                          "description" : "Width (metres) of the terminal.\n\nZero if unknown."
                        },
                        "length" : {
                          "type" : "integer",
                          "description" : "Length (metres) of the terminal.\n\nZero if unknown."
                        },
                        "area" : {
                          "type" : "integer",
                          "description" : "Area (square metres) of the terminal.\n\nZero if unknown."
                        }
                      }
                    },
                    "completion" : {
                      "type" : "string",
                      "format" : "date",
                      "description" : "Date the airport is expected to be built by.\n\nApplies to:\n* new airports"
                    },
                    "atcos" : {
                      "type" : "integer",
                      "description" : "Number of Air Transport Control Officers.\n\nApplies to\n* air traffic management"
                    },
                    "employees" : {
                      "type" : "integer",
                      "description" : "Number of employees.\n\nApplies to\n* air traffic management"
                    },
                    "accs" : {
                      "type" : "integer",
                      "description" : "Number of Area Control Centres. Zero if unknown.\n\nApplies to\n* air traffic management"
                    },
                    "towers" : {
                      "type" : "integer",
                      "description" : "Number of air traffic control towers.\n\nApplies to\n* air traffic management"
                    },
                    "members" : {
                      "type" : "string",
                      "description" : "A comma-separated list of members.\n\nApplies to:\n* government bodies"
                    },
                    "url" : {
                      "type" : "string",
                      "description" : "Profile URL."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile type ID."
      }, {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile ID."
      } ]
    },
    "/data/traffic/companies" : {
      "get" : {
        "summary" : "Search for companies with traffic data",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Company name to search for. A substring search will be performed."
        }, {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "IATA/ICAO code of the company to search for"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "frequencies", "id", "name", "type", "url" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Profile ID."
                      },
                      "type" : {
                        "required" : [ "id", "name" ],
                        "type" : "object",
                        "description" : "Profile type.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Profile type ID."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Profile type name."
                          }
                        }
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Profile name."
                      },
                      "iata" : {
                        "type" : "string",
                        "description" : "Profile IATA code (null if unavailable)."
                      },
                      "icao" : {
                        "type" : "string",
                        "description" : "Profile ICAO code (null if unavailable)."
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "Profile URL."
                      },
                      "frequencies" : {
                        "type" : "array",
                        "description" : "The types (aka frequencies) of traffic data available.",
                        "items" : {
                          "type" : "string",
                          "enum" : [ "M", "Q", "FY" ]
                        }
                      },
                      "country" : {
                        "required" : [ "code", "id", "name" ],
                        "type" : "object",
                        "description" : "If available, the country for the profile.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Country ID."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Country name."
                          },
                          "code" : {
                            "type" : "string",
                            "description" : "2-letter country code.",
                            "example" : "AU"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/traffic/{type}/{id}/{rangeType}/fields" : {
      "get" : {
        "summary" : "Get traffic fields",
        "description" : "Given a profile ID, type and range type, this returns available traffic fields.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile type ID."
      }, {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile ID."
      }, {
        "name" : "rangeType",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Traffic data range type.",
        "enum" : [ "monthly", "quarterly", "annual" ]
      } ]
    },
    "/data/traffic/{type}/{id}/{rangeType}" : {
      "get" : {
        "summary" : "Get traffic data",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Start of year range to pull traffic data from.",
          "x-example" : 2012
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "End of year range to pull traffic data from.",
          "x-example" : 2016
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data", "meta" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "An array of traffic data.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "meta" : {
                  "required" : [ "source" ],
                  "type" : "object",
                  "properties" : {
                    "source" : {
                      "type" : "string",
                      "description" : "The traffic data source."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile type ID."
      }, {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile ID."
      }, {
        "name" : "rangeType",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Type of traffic data to return",
        "enum" : [ "annual", "monthly", "quarterly" ]
      } ]
    },
    "/data/traffic/{type}/{id}/{rangeType}/{field}" : {
      "get" : {
        "summary" : "Get traffic data for a field",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Start of year range to pull traffic data from.",
          "x-example" : 2012
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "End of year range to pull traffic data from.",
          "x-example" : 2016
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "meta" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                },
                "meta" : {
                  "required" : [ "source" ],
                  "type" : "object",
                  "properties" : {
                    "source" : {
                      "type" : "string",
                      "description" : "The traffic data source."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile type ID."
      }, {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Profile ID."
      }, {
        "name" : "rangeType",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Traffic data range type.",
        "enum" : [ "annual", "monthly", "quarterly" ]
      }, {
        "name" : "field",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Field ID."
      } ]
    },
    "/data/traffic/premium/fields" : {
      "get" : {
        "summary" : "Get IATA premium traffic fields",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/traffic/premium" : {
      "get" : {
        "summary" : "Get IATA premium traffic data",
        "description" : "This returns IATA premium traffic data. Note that IATA stopped reporting this in 2015.",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Start of year range to pull traffic data from.",
          "x-example" : 2012
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "End of year range to pull traffic data from.",
          "x-example" : 2016
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/traffic/premium/{field}" : {
      "get" : {
        "summary" : "Get IATA premium traffic data for a field",
        "description" : "This returns IATA premium traffic data. Note that IATA stopped reporting this data in 2015.",
        "parameters" : [ {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Start of year range to pull traffic data from.",
          "x-example" : 2012
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "End of year range to pull traffic data from.",
          "x-example" : 2016
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "field",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Field ID requested. If this is omitted, all fields are returned."
      } ]
    },
    "/data/investors/airports" : {
      "get" : {
        "summary" : "Get a list of investors for all airports",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/investors/{type}/{id}" : {
      "get" : {
        "summary" : "Get investment details for an airport",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Airport type ID."
      }, {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Airport ID."
      } ]
    },
    "/data/construction" : {
      "get" : {
        "summary" : "Get a summary of airport construction spend",
        "description" : "This returns a summary of the US dollar spend on airport construction for each year we have data for. The data is split by new and existing airports, then for existing airports it is further split into runway, terminal, or other.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "existing", "new" ],
                  "type" : "object",
                  "properties" : {
                    "new" : {
                      "type" : "array",
                      "description" : "New airport construction projects.",
                      "items" : {
                        "required" : [ "total", "year" ],
                        "type" : "object",
                        "properties" : {
                          "year" : {
                            "type" : "integer",
                            "description" : "The year that the given total value applies to."
                          },
                          "total" : {
                            "type" : "integer",
                            "description" : "The total value of all construction projects due for completion in the given year."
                          }
                        }
                      }
                    },
                    "existing" : {
                      "required" : [ "other", "runway", "terminal" ],
                      "type" : "object",
                      "description" : "Construction/upgrade project values for existing airports.",
                      "properties" : {
                        "runway" : {
                          "type" : "array",
                          "description" : "Runway upgrade/extension/construction projects for existing airports.",
                          "items" : {
                            "required" : [ "total", "year" ],
                            "type" : "object",
                            "properties" : {
                              "year" : {
                                "type" : "integer",
                                "description" : "The year that the given total value applies to."
                              },
                              "total" : {
                                "type" : "integer",
                                "description" : "The total value of all runway construction projects due for completion in the given year."
                              }
                            }
                          }
                        },
                        "terminal" : {
                          "type" : "array",
                          "description" : "Terminal upgrade/extension/construction projects for existing airports.",
                          "items" : {
                            "required" : [ "total", "year" ],
                            "type" : "object",
                            "properties" : {
                              "year" : {
                                "type" : "integer",
                                "description" : "The year that the given total value applies to."
                              },
                              "total" : {
                                "type" : "integer",
                                "description" : "The total value of all terminal construction projects due for completion in the given year."
                              }
                            }
                          }
                        },
                        "other" : {
                          "type" : "array",
                          "description" : "Other construction projects that aren't runway or terminal for existing airports.",
                          "items" : {
                            "required" : [ "total", "year" ],
                            "type" : "object",
                            "properties" : {
                              "year" : {
                                "type" : "integer",
                                "description" : "The year that the given total value applies to."
                              },
                              "total" : {
                                "type" : "integer",
                                "description" : "The total value of all other construction projects due for completion in the given year."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/construction/airports" : {
      "get" : {
        "summary" : "Get a list of all new airports under construction",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code", "id", "name", "regions", "url" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Metaregion ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Metaregion name."
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "2-letter metaregion code."
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "Metaregion profile URL."
                      },
                      "regions" : {
                        "type" : "array",
                        "description" : "Array of regions within the metaregion.",
                        "items" : {
                          "required" : [ "code", "countries", "id", "name", "url" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Region ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Region name."
                            },
                            "code" : {
                              "type" : "string",
                              "description" : "3-letter region code."
                            },
                            "url" : {
                              "type" : "string",
                              "description" : "Region profile URL."
                            },
                            "countries" : {
                              "type" : "array",
                              "description" : "Array of countries within the region.",
                              "items" : {
                                "required" : [ "airports", "code", "id", "name", "url" ],
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "integer",
                                    "description" : "Country ID."
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "Country name."
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "2-letter country code."
                                  },
                                  "url" : {
                                    "type" : "string",
                                    "description" : "Country profile URL."
                                  },
                                  "airports" : {
                                    "type" : "array",
                                    "description" : "An array of new airports within the country.",
                                    "items" : {
                                      "required" : [ "city", "completion", "iata", "icao", "id", "info", "investment", "name", "url" ],
                                      "type" : "object",
                                      "properties" : {
                                        "id" : {
                                          "type" : "integer",
                                          "description" : "New airport ID."
                                        },
                                        "name" : {
                                          "type" : "string",
                                          "description" : "New airport name."
                                        },
                                        "iata" : {
                                          "type" : "string",
                                          "description" : "New airport IATA code."
                                        },
                                        "icao" : {
                                          "type" : "string",
                                          "description" : "New airport ICAO code."
                                        },
                                        "city" : {
                                          "required" : [ "id", "name" ],
                                          "type" : "object",
                                          "description" : "The city the new airport is being constructed in.",
                                          "properties" : {
                                            "id" : {
                                              "type" : "integer",
                                              "description" : "City ID."
                                            },
                                            "name" : {
                                              "type" : "string",
                                              "description" : "City name."
                                            }
                                          }
                                        },
                                        "url" : {
                                          "type" : "string",
                                          "description" : "The new airport profile URL."
                                        },
                                        "info" : {
                                          "type" : "string",
                                          "description" : "HTML content giving an overview of the new airport."
                                        },
                                        "investment" : {
                                          "type" : "integer",
                                          "description" : "The total amount (USD) being invested in the airport.\n\nThis will be zero if the amount is unknown."
                                        },
                                        "completion" : {
                                          "type" : "string",
                                          "format" : "date",
                                          "description" : "ISO8601 date of when it is anticipated that construction will be completed."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/construction/projects" : {
      "get" : {
        "summary" : "Get a list of all construction projects for existing airports",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code", "id", "name", "regions", "url" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Metaregion ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Metaregion name."
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "Metaregion profile URL."
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "2-letter metaregion code."
                      },
                      "regions" : {
                        "type" : "array",
                        "description" : "Array of regions within the metaregion.",
                        "items" : {
                          "required" : [ "code", "countries", "id", "name", "url" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Region ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Region name."
                            },
                            "code" : {
                              "type" : "string",
                              "description" : "3-letter region code."
                            },
                            "url" : {
                              "type" : "string",
                              "description" : "Region URL."
                            },
                            "countries" : {
                              "type" : "array",
                              "description" : "Array of countries within the region.",
                              "items" : {
                                "required" : [ "airports", "code", "id", "name", "projects", "url" ],
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "integer",
                                    "description" : "Country ID."
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "Country name."
                                  },
                                  "url" : {
                                    "type" : "string",
                                    "description" : "Country profile URL."
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "2-letter country code."
                                  },
                                  "airports" : {
                                    "type" : "array",
                                    "description" : "Array of airport construction projects within the country.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  },
                                  "projects" : {
                                    "type" : "array",
                                    "description" : "Array of construction projects within the country that are not assigned to a specific airport.",
                                    "items" : {
                                      "type" : "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/construction/projects/{id}/description" : {
      "get" : {
        "summary" : "Get a long-form description of the construction project",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string",
                  "description" : "A HTML description of the construction project."
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "The project ID."
      } ]
    },
    "/data/cask" : {
      "get" : {
        "summary" : "Get the minimum/maximum years CASK data is available for",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data", "meta" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "This will always be an empty array.",
                  "items" : {
                    "type" : "string"
                  }
                },
                "meta" : {
                  "required" : [ "max", "min" ],
                  "type" : "object",
                  "properties" : {
                    "min" : {
                      "type" : "integer",
                      "description" : "The minimum year CASK data is available for.",
                      "example" : 2012
                    },
                    "max" : {
                      "type" : "integer",
                      "description" : "The maximum year CASK data is available for.",
                      "example" : 2015
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/data/cask/{year}" : {
      "get" : {
        "summary" : "Get CASK data for a year",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "ask", "asl", "conversion", "country", "currency", "fyend", "id", "latest", "name", "notes", "opcosts", "pax", "profit", "region", "revenue", "rpk", "seats", "source", "type", "uscask", "year" ],
                    "type" : "object",
                    "properties" : {
                      "region" : {
                        "type" : "integer",
                        "description" : "A regional identifier. This is **not** the same as the region IDs used throughout the rest of the API, and only applies to CASK data. The possible values are:\n\n| ID | Region |\n| ----- | ----- |\n| 1 | Asia Pacific, Africa & Middle East |\n| 2 | Europe |\n| 3 | America |"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Name of the airline. Note that this may not match the name given from the profile type/ID."
                      },
                      "id" : {
                        "type" : "integer",
                        "description" : "Profile ID (if available)."
                      },
                      "type" : {
                        "type" : "integer",
                        "description" : "Profile type ID (if available)."
                      },
                      "country" : {
                        "type" : "object",
                        "description" : "Country details.",
                        "properties" : {
                          "name" : {
                            "type" : "string",
                            "description" : "Country name."
                          }
                        }
                      },
                      "bizmodel" : {
                        "required" : [ "id", "name" ],
                        "type" : "object",
                        "description" : "Business model of the airline.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Business model ID."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Business model name."
                          }
                        }
                      },
                      "currency" : {
                        "type" : "string",
                        "description" : "3-letter code of the currency the airline reports in.",
                        "minLength" : 3,
                        "maxLength" : 3,
                        "example" : "USD"
                      },
                      "year" : {
                        "type" : "integer",
                        "description" : "Year that the data applies to."
                      },
                      "latest" : {
                        "type" : "integer",
                        "description" : "Year of the latest report used for data."
                      },
                      "seats" : {
                        "type" : "integer",
                        "description" : "Number of seats flown. Zero if unknown."
                      },
                      "fyend" : {
                        "type" : "integer",
                        "description" : "The month that the financial year ends in for this carrier."
                      },
                      "conversion" : {
                        "type" : "number",
                        "description" : "The currency conversion rate we are using to calculate CASK in US cents."
                      },
                      "opcosts" : {
                        "type" : "integer",
                        "description" : "Operating costs for the carrier (local currency). Zero if unknown."
                      },
                      "pax" : {
                        "type" : "number",
                        "description" : "Passenger numbers (1,000s) for the carrier. Zero if unknown."
                      },
                      "ask" : {
                        "type" : "number",
                        "description" : "ASKs (1,000s) flown by the carrier. Zero if unknown."
                      },
                      "rpk" : {
                        "type" : "number",
                        "description" : "RPK values. Zero if unknown."
                      },
                      "asl" : {
                        "type" : "integer",
                        "description" : "Average sector length (km)."
                      },
                      "uscask" : {
                        "type" : "number",
                        "description" : "The average CASK (cost per ASK) value for this carrier, in USD."
                      },
                      "revenue" : {
                        "type" : "number",
                        "description" : "The carrier's revenue (1,000s, local currency). Zero if unknown."
                      },
                      "profit" : {
                        "type" : "number",
                        "description" : "The carrier's profit (1,000s, local currency). Zero if unknown."
                      },
                      "notes" : {
                        "type" : "string",
                        "description" : "Any notes about the record."
                      },
                      "source" : {
                        "type" : "string",
                        "description" : "The source for this record."
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "year",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "The year of CASK data requested."
      } ]
    },
    "/data/shares" : {
      "get" : {
        "summary" : "Search for companies with share prices",
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "If this exists, then results will be searched for by IATA/ICAO/country code.",
          "x-example" : "QF"
        }, {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Any results that start with this string will be returned.",
          "x-example" : "qan"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/data/capacity" : {
      "get" : {
        "summary" : "Get capacity for a route",
        "parameters" : [ {
          "name" : "dep",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "description" : "Route departure profile ID.\n\nThis can be an airport, country, region, metaregion or city ID."
        }, {
          "name" : "deptype",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The profile type of the departing ID. \n\nThis can be an airport, country, region, metaregion or city ID. For all types that are not a city, use their profile type ID. If it is a city, use \"city\" as the value here.",
          "enum" : [ "2", "4", "5", "6", "city" ]
        }, {
          "name" : "arr",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "description" : "Route arrival profile ID.\n\nThis can be an airport, country, region, metaregion or city ID."
        }, {
          "name" : "arrtype",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The profile type of the arriving ID. \n\nThis can be an airport, country, region, metaregion or city ID. For all types that are not a city, use their profile type ID. If it is a city, use \"city\" as the value here.",
          "enum" : [ "2", "4", "5", "6", "city" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "alliance", "bizmodel", "country", "iata", "icao", "id", "name", "url", "weeks" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Airline profile ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Airline name."
                      },
                      "iata" : {
                        "type" : "string",
                        "description" : "Airline IATA code."
                      },
                      "icao" : {
                        "type" : "string",
                        "description" : "Airline ICAO code."
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "Airline profile URL."
                      },
                      "alliance" : {
                        "required" : [ "id", "name" ],
                        "type" : "object",
                        "description" : "Airline alliance details.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Airline alliance ID. Zero if airline is not in an alliance."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Airline alliance name. Null if airline is not in an alliance."
                          }
                        }
                      },
                      "bizmodel" : {
                        "required" : [ "id", "name" ],
                        "type" : "object",
                        "description" : "Business model details.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Airline business model ID."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Airline business model name."
                          }
                        }
                      },
                      "country" : {
                        "required" : [ "id" ],
                        "type" : "object",
                        "description" : "Airline country details.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Airline country ID."
                          }
                        }
                      },
                      "weeks" : {
                        "type" : "array",
                        "description" : "Array of capacity data by week.",
                        "items" : {
                          "required" : [ "freight", "freq", "seats", "week" ],
                          "type" : "object",
                          "properties" : {
                            "week" : {
                              "type" : "string",
                              "format" : "date",
                              "description" : "ISO8601 date of the week this capacity data applies to. Note that all weeks are treated as having started on a **Monday**."
                            },
                            "freq" : {
                              "required" : [ "arr", "dep" ],
                              "type" : "object",
                              "description" : "Frequency details for the week.",
                              "properties" : {
                                "dep" : {
                                  "type" : "integer",
                                  "description" : "Number of departures for the week."
                                },
                                "arr" : {
                                  "type" : "integer",
                                  "description" : "Number of arrivals for the week.\n\nThis will almost always be identical to the number of departures, except in cases where the schedule gets modified and it starts/ends over a weekend."
                                }
                              }
                            },
                            "freight" : {
                              "required" : [ "aftks", "belly", "cargo", "total" ],
                              "type" : "object",
                              "description" : "Freight details for the week.",
                              "properties" : {
                                "aftks" : {
                                  "type" : "integer",
                                  "description" : "Available freight tonne kilometres (estimated by CAPA)."
                                },
                                "belly" : {
                                  "type" : "integer",
                                  "description" : "Amount of freight (kg) carried in the bellyhold of passenger planes (estimated by CAPA)."
                                },
                                "cargo" : {
                                  "type" : "integer",
                                  "description" : "Amount of freight (kg) carried in cargo planes (estimated by CAPA)."
                                },
                                "total" : {
                                  "type" : "integer",
                                  "description" : "Total amount of freight (kg) carried (estimated by CAPA)."
                                }
                              }
                            },
                            "seats" : {
                              "required" : [ "asks", "bclass", "eclass", "fclass", "peclass", "total" ],
                              "type" : "object",
                              "description" : "Seat details for the week.",
                              "properties" : {
                                "asks" : {
                                  "type" : "integer",
                                  "description" : "Available seat kilometres."
                                },
                                "fclass" : {
                                  "type" : "integer",
                                  "description" : "Number of first class seats flown."
                                },
                                "bclass" : {
                                  "type" : "integer",
                                  "description" : "Number of business class seats flown."
                                },
                                "peclass" : {
                                  "type" : "integer",
                                  "description" : "Number of premium economy class seats flown."
                                },
                                "eclass" : {
                                  "type" : "integer",
                                  "description" : "Number of economy class seats flown."
                                },
                                "total" : {
                                  "type" : "integer",
                                  "description" : "Total number of seats flown."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/capacity/origins" : {
      "get" : {
        "summary" : "Get a list of possible origins for capacity data",
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "IATA/ICAO/country code to search for. If this is set, the \"search\" parameter will be ignored."
        }, {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Search for entities beginning with this string."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/capacity/destinations" : {
      "get" : {
        "summary" : "Given an origin for a route, get a list of destinations",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "required" : true,
          "type" : "integer",
          "description" : "Departure profile ID."
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Departure profile type.\n\nThis can be an airport, country, region, metaregion or city ID. For all types that are not a city, use their profile type ID. If it is a city, use \"city\" as the value here.",
          "enum" : [ "2", "4", "5", "6", "city" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/capacity/airports" : {
      "get" : {
        "summary" : "Get a list of airports that have current capacity data",
        "parameters" : [ {
          "name" : "code",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Search by IATA/ICAO code for an airport. This overrides the contents of the \"search\" parameter."
        }, {
          "name" : "search",
          "in" : "header",
          "required" : false,
          "type" : "string",
          "description" : "Search for any airports containing this string in the name."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/capacity/airlines" : {
      "get" : {
        "summary" : "Get a list of airlines that have current capacity data",
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "IATA/ICAO code of the airline. This overrides the \"search\" parameter."
        }, {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Search for all airlines where the name contains this string."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/summaries/current" : {
      "get" : {
        "summary" : "Get a global fleet summary",
        "description" : "This returns a current global fleet summary as of today. Note that only results with a status of In Service, On Order, On Option or In Storage are returned. Cancelled etc statuses are omitted.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "id", "name", "regions" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Aircraft manufacturer ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Aircraft manufacturer name."
                      },
                      "regions" : {
                        "type" : "array",
                        "description" : "Metaregions that this aircraft manufacturer has aircraft in.",
                        "items" : {
                          "required" : [ "bizmodels", "code", "id", "name" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Metaregion ID. If the metaregion is unknown, this will be zero."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Metaregion name. If the metaregion is unknown, this will be \"n/a\"."
                            },
                            "code" : {
                              "type" : "string",
                              "description" : "2-letter metaregion code. Null if unknown."
                            },
                            "bizmodels" : {
                              "type" : "array",
                              "description" : "Business models this aircraft is used in.",
                              "items" : {
                                "required" : [ "configs", "id", "name" ],
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "integer",
                                    "description" : "Business model ID. Zero if unknown."
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "Business model name. \"n/a\" if unknown."
                                  },
                                  "configs" : {
                                    "type" : "array",
                                    "description" : "Aircraft configurations.",
                                    "items" : {
                                      "required" : [ "id", "name", "types" ],
                                      "type" : "object",
                                      "properties" : {
                                        "id" : {
                                          "type" : "integer",
                                          "description" : "Aircraft configuration ID."
                                        },
                                        "name" : {
                                          "type" : "string",
                                          "description" : "Aircraft configuration name.",
                                          "example" : "Passenger"
                                        },
                                        "types" : {
                                          "type" : "array",
                                          "description" : "Aircraft types.",
                                          "items" : {
                                            "required" : [ "id", "name", "statuses" ],
                                            "type" : "object",
                                            "properties" : {
                                              "id" : {
                                                "type" : "integer",
                                                "description" : "Aircraft type ID."
                                              },
                                              "name" : {
                                                "type" : "string",
                                                "description" : "Aircraft type name.",
                                                "example" : "Small Commercial Turboprop"
                                              },
                                              "statuses" : {
                                                "type" : "array",
                                                "description" : "Aircraft statuses.",
                                                "items" : {
                                                  "required" : [ "aircraft", "id", "name", "seats" ],
                                                  "type" : "object",
                                                  "properties" : {
                                                    "id" : {
                                                      "type" : "integer",
                                                      "description" : "Aircraft status ID."
                                                    },
                                                    "name" : {
                                                      "type" : "string",
                                                      "description" : "Aircraft status name.",
                                                      "example" : "In Service"
                                                    },
                                                    "aircraft" : {
                                                      "type" : "integer",
                                                      "description" : "Number of aircraft that currently have this status."
                                                    },
                                                    "seats" : {
                                                      "type" : "integer",
                                                      "description" : "Number of seats that currently have this status."
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/summaries/age" : {
      "get" : {
        "summary" : "Get average fleet age by metaregion",
        "description" : "This returns the average age in days of aircraft that are currently in service, split by metaregion.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "days", "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Metaregion ID. Zero if unknown."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Metaregion name. \"n/a\" if unknown."
                      },
                      "days" : {
                        "type" : "number",
                        "description" : "Average age in days of aircraft in service as of today."
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/summaries/lessors" : {
      "get" : {
        "summary" : "Get a global summary of leased aircraft totals",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "aircraft", "id", "name", "seats", "url" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Lessor ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Lessor name."
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "Lessor profile URL."
                      },
                      "aircraft" : {
                        "required" : [ "option", "order", "service", "storage" ],
                        "type" : "object",
                        "description" : "Aircraft details.",
                        "properties" : {
                          "service" : {
                            "type" : "integer",
                            "description" : "Total aircraft in service."
                          },
                          "storage" : {
                            "type" : "integer",
                            "description" : "Total aircraft in storage."
                          },
                          "order" : {
                            "type" : "integer",
                            "description" : "Total aircraft on order."
                          },
                          "option" : {
                            "type" : "integer",
                            "description" : "Total aircraft on option."
                          }
                        }
                      },
                      "seats" : {
                        "required" : [ "option", "order", "service", "storage" ],
                        "type" : "object",
                        "description" : "Seat details.",
                        "properties" : {
                          "service" : {
                            "type" : "integer",
                            "description" : "Total seats in service."
                          },
                          "storage" : {
                            "type" : "integer",
                            "description" : "Total seats in storage."
                          },
                          "order" : {
                            "type" : "integer",
                            "description" : "Total seats on order."
                          },
                          "option" : {
                            "type" : "integer",
                            "description" : "Total seats on option."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/summaries/orders" : {
      "get" : {
        "summary" : "Get a global summary of aircraft on order",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code", "id", "name", "regions" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Metaregion ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Metaregion name."
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "2-letter metaregion code."
                      },
                      "regions" : {
                        "type" : "array",
                        "items" : {
                          "required" : [ "code", "countries", "id", "name" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Region ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Region name."
                            },
                            "code" : {
                              "type" : "string",
                              "description" : "3-letter region code."
                            },
                            "countries" : {
                              "type" : "array",
                              "items" : {
                                "required" : [ "airlines", "code", "id", "name" ],
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "integer",
                                    "description" : "Country ID."
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "Country name."
                                  },
                                  "code" : {
                                    "type" : "string",
                                    "description" : "2-letter country code."
                                  },
                                  "airlines" : {
                                    "type" : "array",
                                    "items" : {
                                      "required" : [ "bizmodel", "configs", "iata", "icao", "id", "name", "url" ],
                                      "type" : "object",
                                      "properties" : {
                                        "id" : {
                                          "type" : "string",
                                          "description" : "Airline ID."
                                        },
                                        "name" : {
                                          "type" : "string",
                                          "description" : "Airline name."
                                        },
                                        "iata" : {
                                          "type" : "string",
                                          "description" : "Airline IATA code."
                                        },
                                        "icao" : {
                                          "type" : "string",
                                          "description" : "Airline ICAO code."
                                        },
                                        "url" : {
                                          "type" : "string",
                                          "description" : "Airline profile URL."
                                        },
                                        "bizmodel" : {
                                          "required" : [ "id", "name" ],
                                          "type" : "object",
                                          "properties" : {
                                            "id" : {
                                              "type" : "integer",
                                              "description" : "Business model ID."
                                            },
                                            "name" : {
                                              "type" : "string",
                                              "description" : "Business model name."
                                            }
                                          }
                                        },
                                        "configs" : {
                                          "type" : "array",
                                          "items" : {
                                            "required" : [ "id", "name" ],
                                            "type" : "object",
                                            "properties" : {
                                              "id" : {
                                                "type" : "integer",
                                                "description" : "Configuration ID."
                                              },
                                              "name" : {
                                                "type" : "string",
                                                "description" : "Configuration name."
                                              },
                                              "types" : {
                                                "type" : "array",
                                                "items" : {
                                                  "required" : [ "id", "name", "years" ],
                                                  "type" : "object",
                                                  "properties" : {
                                                    "id" : {
                                                      "type" : "integer",
                                                      "description" : "Aircraft type ID."
                                                    },
                                                    "name" : {
                                                      "type" : "string",
                                                      "description" : "Aircraft type name."
                                                    },
                                                    "years" : {
                                                      "type" : "array",
                                                      "items" : {
                                                        "required" : [ "aircraft", "seats", "year" ],
                                                        "type" : "object",
                                                        "properties" : {
                                                          "year" : {
                                                            "type" : "integer",
                                                            "description" : "Year of expected delivery. Zero if unknown."
                                                          },
                                                          "aircraft" : {
                                                            "type" : "integer",
                                                            "description" : "Total aircraft on order."
                                                          },
                                                          "seats" : {
                                                            "type" : "integer",
                                                            "description" : "Total seats on order."
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/summaries/deliveries" : {
      "get" : {
        "summary" : "Get a global summary of aircraft deliveries",
        "description" : "This returns a summary of aircraft deliveries, grouped by region and business model.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "bizmodels", "code", "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Metaregion ID.\n\nCan be null for any aircraft not assigned operators."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Metaregion name.\n\nCan be null for any aircraft not assigned operators."
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "Metaregion code.\n\nCan be null for any aircraft not assigned operators."
                      },
                      "bizmodels" : {
                        "type" : "array",
                        "description" : "Array of business models within the region.",
                        "items" : {
                          "required" : [ "configs", "id", "name" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Business model ID.\n\nCan be null for any aircraft not assigned operators."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Business model name.\n\nCan be null for any aircraft not assigned operators."
                            },
                            "configs" : {
                              "type" : "array",
                              "description" : "Aircraft configurations array.",
                              "items" : {
                                "required" : [ "id", "name", "types" ],
                                "type" : "object",
                                "properties" : {
                                  "id" : {
                                    "type" : "integer",
                                    "description" : "Configuration ID."
                                  },
                                  "name" : {
                                    "type" : "string",
                                    "description" : "Configuration name (passenger, cargo etc)."
                                  },
                                  "types" : {
                                    "type" : "array",
                                    "description" : "Array of aircraft types.",
                                    "items" : {
                                      "required" : [ "id", "name", "years" ],
                                      "type" : "object",
                                      "properties" : {
                                        "id" : {
                                          "type" : "integer",
                                          "description" : "Aircraft type ID."
                                        },
                                        "name" : {
                                          "type" : "string",
                                          "description" : "Aircraft type name."
                                        },
                                        "years" : {
                                          "type" : "array",
                                          "description" : "Array of delivery years.",
                                          "items" : {
                                            "required" : [ "aircraft", "seats", "year" ],
                                            "type" : "object",
                                            "properties" : {
                                              "year" : {
                                                "type" : "integer",
                                                "description" : "Aircraft delivery year."
                                              },
                                              "aircraft" : {
                                                "type" : "integer",
                                                "description" : "Number of aircraft delivered."
                                              },
                                              "seats" : {
                                                "type" : "integer",
                                                "description" : "Total number of seats from all delivered aircraft."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/search" : {
      "get" : {
        "summary" : "Get a list of saved searches",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Create a new saved search",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "columns", "name", "search" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of the saved search."
              },
              "search" : {
                "type" : "object",
                "description" : "Search parameters as an object.",
                "properties" : { }
              },
              "columns" : {
                "type" : "array",
                "description" : "Array of column IDs to display (currently ignored).",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "integer",
                  "description" : "Newly saved search ID."
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/fleet/search/{id}" : {
      "get" : {
        "summary" : "Get a saved search",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "put" : {
        "summary" : "Update a saved search",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "columns", "name", "search" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of saved search."
              },
              "search" : {
                "type" : "object",
                "description" : "Search parameters.",
                "properties" : { }
              },
              "columns" : {
                "type" : "array",
                "description" : "Column IDs to return. Currently ignored.",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "boolean",
                  "description" : "This will always be true."
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "Delete a saved search",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "boolean",
                  "description" : "This will always be true."
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Saved search ID."
      } ]
    },
    "/data/fleet/filters/{type}" : {
      "get" : {
        "summary" : "Search for a filter",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Results page number (zero-based).",
          "default" : 0
        }, {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "A search string to filter results by."
        }, {
          "name" : "code",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "For airline searches, you can specify an IATA/ICAO code and it will search based on that. Sending a value for this causes the `search` parameter to be ignored."
        }, {
          "name" : "inservice",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "If a value is sent for this and it's an airline search, then only airlines currently operating will be returned."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "The filter type.",
        "enum" : [ "variant", "series", "airline", "engine", "country", "region", "bizmodel", "lessor", "alliance", "amanufacturer", "model", "emodel", "emanufacturer", "status", "role", "type", "apu", "apumodel", "apumanufacturer", "airport" ]
      } ]
    },
    "/data/fleet/filters/{type}/{id}" : {
      "get" : {
        "summary" : "Get a filter by ID",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403"
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "Filter type."
      }, {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Filter ID."
      } ]
    },
    "/data/fleet" : {
      "get" : {
        "summary" : "Search for fleet data",
        "parameters" : [ {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Column ID to sort results on."
        }, {
          "name" : "order",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Order to sort results in.",
          "enum" : [ "asc", "desc" ]
        }, {
          "name" : "airline",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of airline/operator IDs to return results for.\n\nThis will only return records that have an operator assigned to them.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "country",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of country IDs to return results for.\n\nThis will only return records that have an operator assigned to them.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "region",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of region IDs to return results for.\n\nThis will only return records that have an operator assigned to them.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "bizmodel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of business model IDs to return results for.\n\nThis will only return records that have an operator assigned to them.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "alliance",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of alliance IDs to return results for.\n\nThis will only return records that have an operator assigned to them.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "drange",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "This is a delivery date range to search for.\n\nThe format of the request is `YYYY-MM-DD/YYYY-MM-DD` where the date value before the slash is the \"from\" date and the date value after the slash is the \"to\" date."
        }, {
          "name" : "mrange",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "This is a manufactured date range to search for.\n\nThe format of the request is `YYYY-MM-DD/YYYY-MM-DD` where the date value before the slash is the \"from\" date and the date value after the slash is the \"to\" date."
        }, {
          "name" : "amanufacturer",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft manufacturer IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "model",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft model IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "series",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft variant series IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "variant",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft variant IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft type IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "role",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft role IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "parked",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of airport IDs to search for, if looking for aircraft that are currently in storage.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "serial",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft serial numbers to search for.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "tail",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft tail numbers to search for.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "emanufacturer",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of engine manufacturer IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "engine",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of engine IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "emodel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of engine model IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of record status IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "wetleased",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "True if we want to include aircraft that are subleased to an operator when doing a search by operator ID."
        }, {
          "name" : "myairlease",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "True if we only want to return records that we have myairlease data for."
        }, {
          "name" : "winglets",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "True if we only want aircraft that have winglets."
        }, {
          "name" : "relevant",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "When doing a date range search, set this to true to only return records that fall within the date range, for aircraft that have multiple records within the range. Otherwise all records from the date range start up until the present are returned for the aircraft."
        }, {
          "name" : "apumanufacturer",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of APU manufacturer IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "apumodel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of APU model IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "apu",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of APU IDs to search for.",
          "items" : {
            "type" : "integer"
          }
        }, {
          "name" : "owned",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "True will only return aircraft that are owned by the operator."
        }, {
          "name" : "leased",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "True will only return aircraft that are leased by the operator."
        }, {
          "name" : "lessor",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of lessor/owner IDs to search for.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "sublessor",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of sublessor IDs to search for.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "lmanager",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of aircraft manager IDs to search for.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "sowner",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "description" : "List of substantative owner IDs to search for.",
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "asat",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "Date to do point-in-time searches with. Overrides `range`, `from` and `to`."
        }, {
          "name" : "range",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Date range to search. Overrides `from` and `to`.",
          "enum" : [ "year", "last3" ]
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "Date to search records from."
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "date",
          "description" : "Date to search records to."
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based page index of results."
        }, {
          "name" : "num",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Number of results to return."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data", "meta" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "meta" : {
                  "required" : [ "count", "page", "total" ],
                  "type" : "object",
                  "properties" : {
                    "count" : {
                      "type" : "integer",
                      "description" : "Number of records returned."
                    },
                    "total" : {
                      "type" : "integer",
                      "description" : "Total number of records for this query."
                    },
                    "page" : {
                      "type" : "integer",
                      "description" : "Zero-based page number of results."
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/site/categories" : {
      "get" : {
        "summary" : "Get a list of available categories",
        "description" : "Categories are groups of tags that are used to filter Alerts and categorise news and analysis articles, as well as profiles.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "categories", "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Category grouping ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Category grouping name."
                      },
                      "categories" : {
                        "type" : "array",
                        "description" : "An array of categories.",
                        "items" : {
                          "required" : [ "id", "name" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Category ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Category name."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/categories/{id}" : {
      "get" : {
        "summary" : "Get category information",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "id", "name", "parent", "sortorder" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Category ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Category name."
                    },
                    "parent" : {
                      "type" : "integer",
                      "description" : "Category parent ID. This will be zero if the category has no parent."
                    },
                    "sortorder" : {
                      "type" : "integer",
                      "description" : "Integer value relating to where the category should appear if in a list of categories. 0 = top of the list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "type" : "integer",
        "description" : "Category ID."
      } ]
    },
    "/site/sectors" : {
      "get" : {
        "summary" : "Get available industry sectors",
        "description" : "Get a list of industry sectors. Mostly useful when creating/updating accounts.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "Industry sectors.",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Industry sector ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Industry sector name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/countries" : {
      "get" : {
        "summary" : "Get a list of countries",
        "description" : "Returns a list of countries and their corresponding IDs.\n\n:exclamation: Note that there are two separate versions of the countries list - one is used for user accounts and shop items, and the other is used for all data-related URLs.",
        "parameters" : [ {
          "name" : "shop",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "description" : "Send a shop flag if you want to return countries from the shop instead of the main data database.\n\nIf you're working with data, you want the main database. If you're working with user accounts, you want the shop database."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Country ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Country name."
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "2-letter country code.",
                        "minLength" : 2,
                        "maxLength" : 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site" : {
      "get" : {
        "summary" : "Get current homepage content",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "items", "title", "type" ],
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "description" : "Unique identifier string of the \"type\" of the result.",
                        "example" : "analysis"
                      },
                      "title" : {
                        "type" : "string",
                        "description" : "The title of the section.",
                        "example" : "Latest Events"
                      },
                      "items" : {
                        "type" : "array",
                        "description" : "An array of items for that data type. This may be [Event](#type_event) objects, [News](#type_news_brief) objects, [Article](#type_article) objects, [Report](#type_report) objects or Airline Leader objects.",
                        "items" : {
                          "type" : "object",
                          "properties" : { }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/ads" : {
      "get" : {
        "summary" : "Get ads to display",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "main", "secondary" ],
                  "type" : "object",
                  "properties" : {
                    "main" : {
                      "$ref" : "#/definitions/Ad"
                    },
                    "secondary" : {
                      "$ref" : "#/definitions/Ad"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/maptoken" : {
      "get" : {
        "summary" : "Get a map token",
        "description" : "Requests to OAG's mapping server need to be accompanied by a token, which proves that the request was coming from a CAPA user.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "string",
                  "description" : "A map token. This will be appended to the OAG iframe, under a parameter called **CAPAID**."
                }
              }
            }
          },
          "401" : {
            "description" : "Status 401",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Check a map token",
        "description" : "Check if a user has access to maps, based on the token supplied. This is normally called from OAG's mapping server.",
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "token" ],
            "properties" : {
              "token" : {
                "type" : "string",
                "description" : "The user's map token. It expires as soon as it is validated."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "access", "id", "trial" ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "The user's ID."
                    },
                    "access" : {
                      "type" : "boolean",
                      "description" : "Whether or not the user has access to OAG maps."
                    },
                    "trial" : {
                      "type" : "boolean",
                      "description" : "Whether or not the user is trialing OAG maps."
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Status 400",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "403" : {
            "description" : "Status 403",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "security" : [ { } ]
      },
      "parameters" : [ ]
    },
    "/site/map" : {
      "get" : {
        "summary" : "Download an XML sitemap index",
        "description" : "Search engines use XML sitemaps in order to find all the available links within a website. Accessing this URL returns an XML sitemap index of the CAPA website.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An XML sitemap index will be returned."
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/map/download/{filename}" : {
      "get" : {
        "summary" : "Download an XML sitemap",
        "description" : "Access this to download an individual XML sitemap. Generally this is not accessed directly, and is instead piped through the CAPA site.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "This will return a gzipped XML sitemap."
          },
          "404" : {
            "description" : "Status 404",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "parameters" : [ {
        "name" : "filename",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "A sitemap filename.",
        "x-example" : "sitemap-0.xml.gz"
      } ]
    },
    "/site/map/{type}" : {
      "get" : {
        "summary" : "Download a Google News XML sitemap",
        "description" : "This returns an XML sitemap of the latest news, for use in Google News.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Returns a Google News XML sitemap."
          }
        }
      },
      "parameters" : [ {
        "name" : "type",
        "in" : "path",
        "required" : true,
        "type" : "string",
        "description" : "A type of news",
        "enum" : [ "news", "analysis", "airline-leader" ]
      } ]
    },
    "/site/tags" : {
      "get" : {
        "summary" : "Search for a tag",
        "description" : "This allows a user to retrieve a tag and its corresponding ID based on a search.",
        "parameters" : [ {
          "name" : "term",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "Search for any tags beginning with this string.",
          "x-example" : "qan"
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Tag ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Tag name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/search" : {
      "get" : {
        "summary" : "Search the CAPA site",
        "description" : "This allows the user to perform a full-text search across CAPA's news, analysis, reports and profiles.",
        "parameters" : [ {
          "name" : "term",
          "in" : "query",
          "required" : true,
          "type" : "string",
          "description" : "The search term to use."
        }, {
          "name" : "where",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "The collection of items to search in. This is slightly confusing. \"dist\" means everything, \"news\" means news and analysis articles, \"analysis\" articles, \"briefs\" means news.",
          "default" : "dist",
          "enum" : [ "dist", "news", "analysis", "briefs", "profiles", "report" ]
        }, {
          "name" : "sort",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "How to sort results.\n\n* date: sorts them in reverse-chronological order.\n* relevance: sorts it by what the search engine thinks is most relevant.",
          "default" : "relevance",
          "enum" : [ "date", "relevance" ]
        }, {
          "name" : "page",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Zero-based index of the results page. 10 results are returned at a time. This cannot be overridden.",
          "default" : 0
        }, {
          "name" : "from",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "If you want to search within a date range, include From and To. These are strings that will be parsed by PHP's strotime() function."
        }, {
          "name" : "to",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "If you want to search within a date range, include From and To. These are strings that will be parsed by PHP's strotime() function."
        } ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "numpages", "results", "total" ],
                  "type" : "object",
                  "properties" : {
                    "results" : {
                      "type" : "array",
                      "items" : {
                        "required" : [ "bshortname", "id", "newstype", "premium", "shorturl", "snippet", "tags", "timestamp", "title", "type", "url" ],
                        "type" : "object",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "The ID of the result. Note that duplicates can exist, as this is the ID of the record itself. So if there's a news article with an ID of 52 and a profile with an ID of 52, they're both going to have the same ID. Differentiate by checking the \"type\" field."
                          },
                          "premium" : {
                            "type" : "boolean",
                            "description" : "True if the result can only be viewed by CAPA members."
                          },
                          "newstype" : {
                            "type" : "string",
                            "description" : "If this is an analysis or other long-form article, the newstype value will be listed here."
                          },
                          "shorturl" : {
                            "type" : "string",
                            "description" : "A shorturl (shortname) value for the result. Can be ignored, rely on the url parameter instead."
                          },
                          "url" : {
                            "type" : "string",
                            "description" : "The URL of the result."
                          },
                          "timestamp" : {
                            "type" : "integer",
                            "description" : "UNIX timestamp of the publication date of the result. For results that don't have publication dates (ie. profiles) this will be zero."
                          },
                          "bshortname" : {
                            "type" : "string",
                            "description" : "Blog shortname. This is a legacy field that can be ignored."
                          },
                          "tags" : {
                            "type" : "string",
                            "description" : "A comma-separated list of tag IDs related to the result."
                          },
                          "title" : {
                            "type" : "string",
                            "description" : "The name of the result."
                          },
                          "snippet" : {
                            "type" : "string",
                            "description" : "A snippet of HTML that gives the user an idea of why the result matched."
                          },
                          "type" : {
                            "type" : "string",
                            "description" : "The type of the result. Note that this is a bit weird in that news = analysis and briefs = news.",
                            "enum" : [ "news", "briefs", "airlines", "airports", "countries", "lessors", "regions" ]
                          }
                        }
                      }
                    },
                    "numpages" : {
                      "type" : "integer",
                      "description" : "The number of pages of results available."
                    },
                    "total" : {
                      "type" : "integer",
                      "description" : "The total results found."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/cities" : {
      "get" : {
        "summary" : "Get a list of all cities",
        "description" : "This will return a huge list of cities, grouped by country.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "cities", "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Country ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Country name."
                      },
                      "cities" : {
                        "type" : "array",
                        "description" : "An array of cities within the country.",
                        "items" : {
                          "required" : [ "id", "name", "state" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "City ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "City name."
                            },
                            "state" : {
                              "type" : "string",
                              "description" : "State that the city is in (if known).",
                              "example" : "WA"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/airports" : {
      "get" : {
        "summary" : "Get a list of all airports",
        "description" : "Return a huge array of all airports within our system.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "airports", "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Country ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Country name."
                      },
                      "airports" : {
                        "type" : "array",
                        "description" : "An array of airports within this country.",
                        "items" : {
                          "required" : [ "iata", "icao", "id", "name" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Airport ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Airport name."
                            },
                            "iata" : {
                              "type" : "string",
                              "description" : "Airport IATA code.",
                              "maxLength" : 3,
                              "example" : "SYD"
                            },
                            "icao" : {
                              "type" : "string",
                              "description" : "Airport ICAO code.",
                              "maxLength" : 4,
                              "example" : "YSSY"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/airlines" : {
      "get" : {
        "summary" : "Get a list of all airlines",
        "description" : "Get a list of all available airlines.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data", "hub" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "bizmodel", "country", "efrom", "eto", "failed", "iata", "icao", "id", "name", "startup", "startupdate", "url" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Airline ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Airline name."
                      },
                      "iata" : {
                        "type" : "string",
                        "description" : "Airline IATA code."
                      },
                      "icao" : {
                        "type" : "string",
                        "description" : "Airline ICAO code."
                      },
                      "efrom" : {
                        "type" : "string",
                        "format" : "date",
                        "description" : "Date that the airline began operations. May be 0000-00-00 if it is unknown."
                      },
                      "eto" : {
                        "type" : "string",
                        "format" : "date",
                        "description" : "Date that the airline ceased operations. If the airline is still in operation, this value will be null."
                      },
                      "bizmodel" : {
                        "type" : "integer",
                        "description" : "Business model ID of the airline."
                      },
                      "startup" : {
                        "type" : "boolean",
                        "description" : "True if we classify the airline as a startup."
                      },
                      "failed" : {
                        "type" : "integer",
                        "description" : "True if we classify the airline as a failed startup."
                      },
                      "startupdate" : {
                        "type" : "string",
                        "description" : "Date the airline started up. This is a string, not a date as it could be a year, or a month, or a quarter etc.",
                        "example" : "2017"
                      },
                      "url" : {
                        "type" : "string",
                        "description" : "The airline profile URL."
                      },
                      "country" : {
                        "required" : [ "code", "id", "name", "region", "url" ],
                        "type" : "object",
                        "description" : "The country the airline is based in.",
                        "properties" : {
                          "id" : {
                            "type" : "integer",
                            "description" : "Country ID."
                          },
                          "name" : {
                            "type" : "string",
                            "description" : "Country name."
                          },
                          "code" : {
                            "type" : "string",
                            "description" : "2-letter country code.",
                            "minLength" : 2,
                            "maxLength" : 2,
                            "example" : "AU"
                          },
                          "url" : {
                            "type" : "string",
                            "description" : "Country profile URL."
                          },
                          "region" : {
                            "required" : [ "id", "metaregion", "name", "url" ],
                            "type" : "object",
                            "description" : "The country's region.",
                            "properties" : {
                              "id" : {
                                "type" : "integer",
                                "description" : "Region ID."
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Region name."
                              },
                              "url" : {
                                "type" : "string",
                                "description" : "Region profile URL."
                              },
                              "metaregion" : {
                                "type" : "integer",
                                "description" : "Metaregion ID."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "hub" : {
                  "required" : [ "iata", "icao", "id", "name", "url" ],
                  "type" : "object",
                  "description" : "The airline's main hub.",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Airport ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Airport name."
                    },
                    "iata" : {
                      "type" : "string",
                      "description" : "Airport IATA code."
                    },
                    "icao" : {
                      "type" : "string",
                      "description" : "Airport ICAO code."
                    },
                    "url" : {
                      "type" : "string",
                      "description" : "The airport profile URL."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/alliances" : {
      "get" : {
        "summary" : "Get a list of all airline alliances",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "An array of airline alliances.",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Alliance ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Alliance name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/investors" : {
      "get" : {
        "summary" : "Get a list of all investors",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "description" : "An array of investors.",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Investor ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Investor name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/statuses" : {
      "get" : {
        "summary" : "Get a list of all fleet statuses",
        "description" : "Get a list of all possible fleet statuses.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Status ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Status name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/site/roles" : {
      "get" : {
        "summary" : "Get a list of all aircraft roles",
        "description" : "Returns an array of all possible aircraft roles.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "id", "name" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Role ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Role name."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    },
    "/data/allseats" : {
      "get" : {
        "summary" : "Get global seat/ASK counts for the current week",
        "description" : "This returns a simple object that lists all seats/ASKs for domestic and international routes worldwide, for the current week.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "required" : [ "domestic", "international" ],
                  "type" : "object",
                  "properties" : {
                    "domestic" : {
                      "required" : [ "asks", "seats" ],
                      "type" : "object",
                      "description" : "Domestic seats/ASKs.",
                      "properties" : {
                        "seats" : {
                          "required" : [ "bclass", "eclass", "fclass", "peclass" ],
                          "type" : "object",
                          "description" : "Domestic seats.",
                          "properties" : {
                            "fclass" : {
                              "type" : "integer",
                              "description" : "Domestic first class seats."
                            },
                            "bclass" : {
                              "type" : "integer",
                              "description" : "Domestic business class seats."
                            },
                            "peclass" : {
                              "type" : "integer",
                              "description" : "Domestic premium economy class seats."
                            },
                            "eclass" : {
                              "type" : "integer",
                              "description" : "Domestic economy class seats."
                            }
                          }
                        },
                        "asks" : {
                          "required" : [ "bclass", "eclass", "fclass", "peclass" ],
                          "type" : "object",
                          "description" : "Domestic ASKs.",
                          "properties" : {
                            "fclass" : {
                              "type" : "integer",
                              "description" : "Domestic first class ASKs."
                            },
                            "bclass" : {
                              "type" : "integer",
                              "description" : "Domestic business class ASKs."
                            },
                            "peclass" : {
                              "type" : "integer",
                              "description" : "Domestic premium economy class ASKs."
                            },
                            "eclass" : {
                              "type" : "integer",
                              "description" : "Domestic economy class ASKs."
                            }
                          }
                        }
                      }
                    },
                    "international" : {
                      "required" : [ "asks", "seats" ],
                      "type" : "object",
                      "description" : "International seats/ASKs.",
                      "properties" : {
                        "seats" : {
                          "required" : [ "bclass", "eclass", "fclass", "peclass" ],
                          "type" : "object",
                          "description" : "International seats.",
                          "properties" : {
                            "fclass" : {
                              "type" : "integer",
                              "description" : "International first class seats."
                            },
                            "bclass" : {
                              "type" : "integer",
                              "description" : "International business class seats."
                            },
                            "peclass" : {
                              "type" : "integer",
                              "description" : "International premium economy class seats."
                            },
                            "eclass" : {
                              "type" : "integer",
                              "description" : "International economy class seats."
                            }
                          }
                        },
                        "asks" : {
                          "required" : [ "bclass", "eclass", "fclass", "peclass" ],
                          "type" : "object",
                          "description" : "International ASKs.",
                          "properties" : {
                            "fclass" : {
                              "type" : "integer",
                              "description" : "International first class ASKs."
                            },
                            "bclass" : {
                              "type" : "integer",
                              "description" : "International business class ASKs."
                            },
                            "peclass" : {
                              "type" : "integer",
                              "description" : "International premium economy class ASKs."
                            },
                            "eclass" : {
                              "type" : "integer",
                              "description" : "International economy class ASKs."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth 2.0" : [ ]
        } ]
      },
      "parameters" : [ ]
    },
    "/data/regions" : {
      "get" : {
        "summary" : "Get a list of all regions",
        "description" : "This returns a list of all available regions. Needs refactoring.",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Status 200",
            "schema" : {
              "required" : [ "data" ],
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "code", "id", "name", "regions", "shortname" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "integer",
                        "description" : "Metaregion ID."
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Metaregion name."
                      },
                      "code" : {
                        "type" : "string",
                        "description" : "2-letter metaregion code.",
                        "minLength" : 2,
                        "maxLength" : 2,
                        "example" : "AS"
                      },
                      "shortname" : {
                        "type" : "string",
                        "description" : "Metaregion shortname. Used to build a URL - `...` would be a link to a metaregion URL."
                      },
                      "regions" : {
                        "type" : "array",
                        "items" : {
                          "required" : [ "code", "id", "name", "shortname" ],
                          "type" : "object",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Region ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Region name."
                            },
                            "code" : {
                              "type" : "string",
                              "description" : "3-letter region code.",
                              "minLength" : 3,
                              "maxLength" : 3,
                              "example" : "AF1"
                            },
                            "shortname" : {
                              "type" : "string",
                              "description" : "Region shortname. Used to build a URL - `...` would be a link to a region URL."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters" : [ ]
    }
  },
  "securityDefinitions" : {
    "OAuth 2.0" : {
      "description" : "See the [Authentication](#section_authentication) section for more information on how to use OAuth 2.0.",
      "type" : "oauth2",
      "tokenUrl" : "",
      "flow" : "password",
      "scopes" : { }
    }
  },
  "definitions" : {
    "Account" : {
      "type" : "object",
      "required" : [ "bounced", "company", "created", "id", "mailok", "name", "owner", "phone", "position", "username" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "The user's ID."
        },
        "username" : {
          "type" : "string",
          "description" : "The user's username."
        },
        "owner" : {
          "required" : [ "email", "id", "name" ],
          "type" : "object",
          "description" : "If the account is a subaccount, this is the owner account's details.",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Owner account ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Owner account name."
            },
            "email" : {
              "type" : "string",
              "description" : "Owner account's email address."
            }
          }
        },
        "manager" : {
          "required" : [ "email", "name" ],
          "type" : "object",
          "description" : "The details of the account manager assigned to the account.",
          "properties" : {
            "name" : {
              "type" : "string",
              "description" : "The account manager's name."
            },
            "email" : {
              "type" : "string",
              "description" : "The account manager's email address."
            }
          }
        },
        "position" : {
          "type" : "string",
          "description" : "The user's position, or job title."
        },
        "name" : {
          "type" : "string",
          "description" : "The user's name."
        },
        "email" : {
          "type" : "string",
          "description" : "The user's email address."
        },
        "company" : {
          "type" : "string",
          "description" : "The user's company."
        },
        "phone" : {
          "type" : "string",
          "description" : "The user's phone number."
        },
        "fax" : {
          "type" : "string",
          "description" : "The user's fax number."
        },
        "address" : {
          "type" : "string",
          "description" : "The user's street address."
        },
        "suburb" : {
          "type" : "string",
          "description" : "The user's suburb or city."
        },
        "state" : {
          "type" : "string",
          "description" : "The user's state."
        },
        "postcode" : {
          "type" : "string",
          "description" : "The user's postcode or ZIP code."
        },
        "country" : {
          "required" : [ "code", "id", "name" ],
          "type" : "object",
          "description" : "The user's country.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Country ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Country name."
            },
            "code" : {
              "type" : "string",
              "description" : "2-letter country code."
            }
          }
        },
        "sector" : {
          "required" : [ "id", "name" ],
          "type" : "object",
          "description" : "The user's industry sector.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Sector ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Sector name."
            }
          }
        },
        "created" : {
          "type" : "integer",
          "description" : "UNIX timestamp of the time the account was created."
        },
        "bounced" : {
          "type" : "boolean",
          "description" : "If true, then the account's email address is marked as having bounced."
        },
        "mailok" : {
          "type" : "boolean",
          "description" : "It is OK to send email to this user."
        }
      }
    },
    "Shop Item" : {
      "type" : "object",
      "required" : [ "currency", "description", "filename", "files", "id", "mailout", "name", "price", "shortdesc", "sub", "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "The shop item ID."
        },
        "name" : {
          "type" : "string",
          "description" : "The item's name."
        },
        "shortdesc" : {
          "type" : "string",
          "description" : "A short, one sentence text description of the shop item.",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "description" : "A longer, more in-depth HTML description of the shop item."
        },
        "price" : {
          "type" : "number",
          "description" : "The price (or setup fee) of the shop item. For single-purchase items like reports or event passes, this will be the price of the item. For subscriptions, this will be treated as a one-off setup fee for the subscription and added to the subscription pricing."
        },
        "currency" : {
          "required" : [ "id", "symbol" ],
          "type" : "object",
          "description" : "The currency of the product. This will almost always be USD.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Currency ID."
            },
            "symbol" : {
              "type" : "string",
              "description" : "Three-letter currency symbol.",
              "maxLength" : 3,
              "example" : "USD"
            }
          }
        },
        "mailout" : {
          "type" : "boolean",
          "description" : "Boolean indicating whether or not this product contains a mailing list component."
        },
        "type" : {
          "type" : "integer",
          "description" : "Product type. This is currently used for a simple differentiation between reports and all other types of product.\n\n* 0 will indicate that the product is not a report.\n* 1 indicates the product is a report.\n\nThere is the potential for other values to be added in the future, if more complex shop product types are introduced."
        },
        "filename" : {
          "type" : "string",
          "description" : "This is a legacy field indicating the filename for a product if it is downloadable. This will be blank and you should rely on the `files` array instead."
        },
        "sub" : {
          "type" : "array",
          "items" : {
            "required" : [ "id", "period", "price" ],
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "description" : "The product's subscription ID."
              },
              "period" : {
                "type" : "integer",
                "description" : "The length of time (in months) that the subscription is valid for."
              },
              "price" : {
                "type" : "number",
                "description" : "The price for the subscription period."
              }
            }
          }
        },
        "files" : {
          "type" : "array",
          "description" : "An array of files that are provided by the product.",
          "items" : {
            "type" : "string"
          }
        },
        "image" : {
          "type" : "string",
          "description" : "If an image for this product is available, then this is its URL. Check [here](#text_resizing_images) for info on resizing images.\n\nIf there is no image available, this will be a null value."
        },
        "url" : {
          "type" : "string",
          "description" : "The URL for the information/purchase page for this product."
        },
        "requires" : {
          "type" : "string"
        }
      }
    },
    "Ad" : {
      "type" : "object",
      "required" : [ "html", "type" ],
      "properties" : {
        "html" : {
          "type" : "string",
          "description" : "HTML string representing the ad to be inserted."
        },
        "type" : {
          "type" : "string",
          "description" : "The content type of the ad.",
          "example" : "jpeg"
        }
      }
    },
    "Airport Construction Project" : {
      "type" : "object",
      "required" : [ "classification", "completion", "freight", "id", "investment", "pax" ],
      "properties" : {
        "id" : {
          "type" : "number",
          "description" : "Construction project ID."
        },
        "classification" : {
          "type" : "string",
          "description" : "Construction project classification."
        },
        "completion" : {
          "type" : "string",
          "format" : "date",
          "description" : "ISO8601 date of anticipated completion."
        },
        "investment" : {
          "required" : [ "estimated", "total" ],
          "type" : "object",
          "description" : "Investment details for the project.",
          "properties" : {
            "total" : {
              "type" : "integer",
              "description" : "The total USD value of the investment."
            },
            "estimated" : {
              "type" : "boolean",
              "description" : "True if the total is a number estimated by CAPA."
            }
          }
        },
        "pax" : {
          "required" : [ "current", "future" ],
          "type" : "object",
          "description" : "Annual passenger number details.",
          "properties" : {
            "current" : {
              "required" : [ "estimated", "total" ],
              "type" : "object",
              "description" : "Current PAX traffic.",
              "properties" : {
                "total" : {
                  "type" : "integer",
                  "description" : "Total current PAX traffic."
                },
                "estimated" : {
                  "type" : "boolean",
                  "description" : "True if this value is estimated by CAPA."
                }
              }
            },
            "future" : {
              "required" : [ "estimated", "total", "year" ],
              "type" : "object",
              "description" : "Future annual passenger details.",
              "properties" : {
                "total" : {
                  "type" : "integer",
                  "description" : "Total future PAX traffic."
                },
                "estimated" : {
                  "type" : "boolean",
                  "description" : "True if this value is estimated by CAPA, false if it is estimated by the airport."
                },
                "year" : {
                  "type" : "integer",
                  "description" : "Anticipated year that these passenger numbers will be reached. Zero if not specified."
                }
              }
            }
          }
        },
        "freight" : {
          "required" : [ "current", "future" ],
          "type" : "object",
          "description" : "Annual freight tonnage details.",
          "properties" : {
            "current" : {
              "required" : [ "estimated", "total" ],
              "type" : "object",
              "description" : "Current annual freight.",
              "properties" : {
                "total" : {
                  "type" : "integer",
                  "description" : "Total current annual freight (tonnes)."
                },
                "estimated" : {
                  "type" : "boolean",
                  "description" : "True if this value is estimated by CAPA."
                }
              }
            },
            "future" : {
              "required" : [ "estimated", "total", "year" ],
              "type" : "object",
              "description" : "Future annual freight.",
              "properties" : {
                "total" : {
                  "type" : "integer",
                  "description" : "Total future annual freight (tonnes)."
                },
                "estimated" : {
                  "type" : "boolean",
                  "description" : "True if this value is estimated by CAPA, false if it is estimated by the airport."
                },
                "year" : {
                  "type" : "integer",
                  "description" : "Anticipated year that this total will be reached. Zero if not specified."
                }
              }
            }
          }
        },
        "airport" : {
          "required" : [ "iata", "icao", "id", "name", "url" ],
          "type" : "object",
          "description" : "If this optional key exists, it details the airport that this construction project applies to. If not, it is because the project is assigned to a country.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Airport ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Airport name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Airport IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Airport ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Airport profile URL."
            }
          }
        }
      }
    },
    "Airport Investor Result" : {
      "type" : "object",
      "required" : [ "country", "iata", "icao", "id", "investors", "name", "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Airport profile ID."
        },
        "type" : {
          "type" : "integer",
          "description" : "Airport profile type. Note that an airport could be classified as either an \"airport\" or a \"new airport\" so there's two possible types here. See [Profile Types](#text_profile_types) for more information."
        },
        "name" : {
          "type" : "string",
          "description" : "Airport name."
        },
        "iata" : {
          "type" : "string",
          "description" : "Airport IATA code. Null if unavailable."
        },
        "icao" : {
          "type" : "string",
          "description" : "Airport ICAO code. Null if unavailable."
        },
        "url" : {
          "type" : "string",
          "description" : "Airport profile URL."
        },
        "country" : {
          "required" : [ "code", "id", "name", "region", "url" ],
          "type" : "object",
          "description" : "Airport country/region details.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Country ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Country name."
            },
            "code" : {
              "type" : "string",
              "description" : "2-letter country code."
            },
            "url" : {
              "type" : "string",
              "description" : "Country profile URL."
            },
            "region" : {
              "required" : [ "id", "name", "url" ],
              "type" : "object",
              "description" : "Region details.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Region ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "Region name."
                },
                "url" : {
                  "type" : "string",
                  "description" : "Region URL."
                }
              }
            }
          }
        },
        "investors" : {
          "type" : "array",
          "description" : "Investors involved with this airport.",
          "items" : {
            "required" : [ "country", "iata", "icao", "id", "major", "name", "type", "url" ],
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "description" : "Investor profile ID."
              },
              "type" : {
                "type" : "integer",
                "description" : "Investor profile type. An investor may be an \"investor,\" but it's also possible for it to be an airline or another airport, so don't assume that this will always be a profile type of \"investor.\" More info on [profile types](#text_profile_types)."
              },
              "name" : {
                "type" : "string",
                "description" : "Investor name."
              },
              "iata" : {
                "type" : "string",
                "description" : "Investor IATA code (if available)."
              },
              "icao" : {
                "type" : "string",
                "description" : "Investor ICAO code (if available)."
              },
              "major" : {
                "type" : "boolean",
                "description" : "True if the investor is classified as a \"major\" investor. Not a major investor in the airport, but as a major investor worldwide."
              },
              "url" : {
                "type" : "string",
                "description" : "Investor profile URL."
              },
              "country" : {
                "required" : [ "code", "id", "name", "url" ],
                "type" : "object",
                "description" : "Investor's country details.",
                "properties" : {
                  "id" : {
                    "type" : "integer",
                    "description" : "Country ID."
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Country name."
                  },
                  "code" : {
                    "type" : "string",
                    "description" : "2-letter country code."
                  },
                  "url" : {
                    "type" : "string",
                    "description" : "Country profile URL."
                  }
                }
              }
            }
          }
        }
      }
    },
    "Alert" : {
      "type" : "object",
      "required" : [ "search", "types" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "ID of the Alert."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Alert."
        },
        "uid" : {
          "type" : "string",
          "description" : "Unique identifier for the Alert. Use when building RSS feed URLs."
        },
        "types" : {
          "type" : "array",
          "description" : "An array of news types to include in results.\n\nNews types are:\n\n| ID | Type | Description |\n| ----- | ----- | ----- |\n| 0 | News | News briefs. |\n| 1 | Analysis | Analysis articles. |\n| 2 | Press Releases | CAPA press releases. |\n| 3 | Direct News Sources | Other company press releases. |\n| 4 | Share Market Performance | Legacy/unused. |\n| 5 | Blog | Legacy/unused. |\n| 6 | Updates | CAPA updates. Somehow different to CAPA press releases. |\n| 7 | Financials | Legacy/unused. |\n| 8 | Traffic | Legacy/unused.\n| 9 | Airline Leader | Articles from Airline Leader. |",
          "items" : {
            "type" : "integer"
          }
        },
        "search" : {
          "type" : "array",
          "description" : "An array of condition groups to filter news by.",
          "items" : {
            "required" : [ "match", "type" ],
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer",
                "description" : "Condition group ID."
              },
              "type" : {
                "type" : "string",
                "description" : "Whether to match all or any of the conditions included.",
                "enum" : [ "ALL", "ANY" ]
              },
              "match" : {
                "type" : "boolean",
                "description" : "Set to true if you want to include results that match everything, or false if you want to do a negative match.\n\nNegative matches only work when there is more than one condition group. These are so you can go \"match these tags but not those tags.\""
              },
              "conditions" : {
                "required" : [ "cats", "tags" ],
                "type" : "object",
                "description" : "Categories or tags to match.",
                "properties" : {
                  "tags" : {
                    "type" : "array",
                    "description" : "An array of tags.",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "cats" : {
                    "type" : "array",
                    "description" : "An array of category IDs. A list of IDs can be found at [/site/categories](#operation_get_a_list_of_available_categories).",
                    "items" : {
                      "type" : "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "description" : "An Alert object is a description of the parameters and values that make up a single Alert. This will be used to match stories that will be returned to the user."
    },
    "Alert Result" : {
      "type" : "object",
      "required" : [ "article", "id", "timestamp", "title", "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Article ID."
        },
        "title" : {
          "type" : "string",
          "description" : "The title of the article."
        },
        "article" : {
          "type" : "string",
          "description" : "HTML content of the article itself."
        },
        "type" : {
          "required" : [ "id", "name" ],
          "type" : "object",
          "description" : "The article type",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Article type ID"
            },
            "name" : {
              "type" : "string",
              "description" : "Article type name"
            }
          }
        },
        "image" : {
          "type" : "string",
          "description" : "Article image URL. [More info on resizing](#text_resizing_images)."
        },
        "timestamp" : {
          "type" : "string",
          "description" : "UNIX timestamp of the article."
        },
        "url" : {
          "type" : "string",
          "description" : "URL of the article."
        }
      },
      "description" : "A single Alert result will contain an article and all the content for it."
    },
    "Issue" : {
      "type" : "object",
      "required" : [ "date", "description", "filename", "title" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Issue ID (don't confuse with issue number)."
        },
        "issue" : {
          "type" : "integer",
          "description" : "Issue number (don't confuse with issue ID)."
        },
        "title" : {
          "type" : "string",
          "description" : "Issue title (usually blank).\n\nIssue title (usually blank)."
        },
        "date" : {
          "type" : "integer",
          "description" : "UNIX timestamp of the issue publication date."
        },
        "shortname" : {
          "type" : "string",
          "description" : "Publication shortname - a short, unique lowercase abbreviation identifying the publication."
        },
        "description" : {
          "type" : "string",
          "description" : "HTML description of the issue (usually blank)."
        },
        "password" : {
          "type" : "string",
          "description" : "File password. A long time ago we used to distribute issues as password-protected PDFs. This has not been done for many years now."
        },
        "filename" : {
          "type" : "string",
          "description" : "Issue filename."
        }
      }
    },
    "Report" : {
      "type" : "object",
      "required" : [ "description", "id", "name", "shortdesc", "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Report ID."
        },
        "name" : {
          "type" : "string",
          "description" : "Report name."
        },
        "shortdesc" : {
          "type" : "string",
          "description" : "Short, one-sentence text description of the report.",
          "maxLength" : 255
        },
        "description" : {
          "type" : "string",
          "description" : "Longer, multi-paragraph HTML description of the report."
        },
        "price" : {
          "type" : "number",
          "description" : "The price of the report."
        },
        "currency" : {
          "type" : "string",
          "description" : "3-letter code of the currency the report is in.",
          "minLength" : 3,
          "maxLength" : 3,
          "example" : "USD"
        },
        "type" : {
          "type" : "integer",
          "description" : "The report type.\n\n| ID | Type |\n| ----- | ----- |\n| 0 | A free report, available to all people with a CAPA Account. |\n| 1 | A paid report that must be purchased separately. |"
        },
        "image" : {
          "type" : "string",
          "description" : "The image URL for the report, if it is a paid report. Details on resizing images are [here](#text_resizing_images).\n\nFree reports (type = 0) will not have an image URL. You can generate a thumbnail URL instead by using a URL of \n\nIn this situation, {id} is the report ID and {image} is an image filename that is generated based upon the filename of the report, minus its extension and with a width parameter set. It is the same parameter format used for [resizing images](#text_resizing_images), however only the width parameter works. For example, if the report's filename is `Daily_News_3.pdf` then a valid image filename would be `Daily_News_3-400x.jpg` - this would give a 400 pixel wide thumbnail image of the first page of the report."
        },
        "url" : {
          "type" : "string",
          "description" : "The URL of the report info page."
        }
      }
    },
    "Event" : {
      "type" : "object",
      "required" : [ "airline", "airport", "attendees", "australasia", "city", "corporate", "date", "finance", "id", "info", "name", "tech", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Event ID"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the event."
        },
        "info" : {
          "type" : "string",
          "description" : "A short, one-sentence text description of the event."
        },
        "url" : {
          "type" : "string",
          "description" : "The event's URL."
        },
        "city" : {
          "required" : [ "country", "id", "name" ],
          "type" : "object",
          "description" : "The city the event is being held in.",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "City ID."
            },
            "name" : {
              "type" : "string",
              "description" : "City name."
            },
            "country" : {
              "required" : [ "code", "id", "name", "region" ],
              "type" : "object",
              "description" : "The country the event is being held in.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Country ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "Country name."
                },
                "code" : {
                  "type" : "string",
                  "description" : "Two-letter country code.",
                  "minLength" : 2,
                  "maxLength" : 2,
                  "example" : "AU"
                },
                "region" : {
                  "required" : [ "id", "name" ],
                  "type" : "object",
                  "description" : "The metaregion the event is being held in.",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Metaregion ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Metaregion name."
                    }
                  }
                }
              }
            }
          }
        },
        "date" : {
          "required" : [ "certain", "end", "start" ],
          "type" : "object",
          "description" : "The date of the event. Dates are in the timezone of the event's city.",
          "properties" : {
            "start" : {
              "type" : "string",
              "format" : "date",
              "description" : "The start date of the event, in ISO8601 format.",
              "example" : "2017-04-23"
            },
            "end" : {
              "type" : "string",
              "format" : "date",
              "description" : "The end date of the event, in ISO8601 format.",
              "example" : "2017-04-25"
            },
            "certain" : {
              "type" : "boolean",
              "description" : "Whether or not the dates for this event are certain, or just placeholder dates."
            }
          }
        },
        "tech" : {
          "type" : "boolean",
          "description" : "Whether this event has an IT-focused component or not."
        },
        "finance" : {
          "type" : "boolean",
          "description" : "Whether this event has a finance focused component or not."
        },
        "corporate" : {
          "type" : "boolean",
          "description" : "Whether this event has a corporate travel focused component or not."
        },
        "airline" : {
          "type" : "boolean",
          "description" : "Whether this event has an airline focus or not."
        },
        "airport" : {
          "type" : "boolean",
          "description" : "Whether this event has an airport focus or not."
        },
        "attendees" : {
          "type" : "integer",
          "description" : "Expected number of attendees."
        },
        "australasia" : {
          "type" : "boolean",
          "description" : "True if this is a CAPA-ACTE event."
        },
        "splash" : {
          "type" : "string",
          "description" : "The URL for an event splash image, if available. Info on [resizing images](#text_resizing_images)."
        }
      }
    },
    "News Brief" : {
      "type" : "object",
      "required" : [ "article", "date", "id", "tags", "title", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "ID of news brief."
        },
        "title" : {
          "type" : "string",
          "description" : "Title of news brief."
        },
        "article" : {
          "type" : "string",
          "description" : "HTML content of news brief."
        },
        "date" : {
          "type" : "integer",
          "description" : "UNIX timestamp of the news brief's date."
        },
        "url" : {
          "type" : "string",
          "description" : "URL of the news brief."
        },
        "tags" : {
          "type" : "array",
          "description" : "An array of tags that the news brief has been tagged with.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Article" : {
      "type" : "object",
      "required" : [ "abstract", "ad", "featured", "id", "image", "keypoints", "premium", "tags", "timestamp", "title", "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Article ID."
        },
        "title" : {
          "type" : "string",
          "description" : "The title of the article."
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the article, for use as a meta description tag."
        },
        "abstract" : {
          "type" : "string",
          "description" : "The article abstract. This will be the first paragraph or two of an article."
        },
        "article" : {
          "type" : "string",
          "description" : "The article content. Concatenate this with the article abstract to get the full article. This will only be returned on individual article requests."
        },
        "ad" : {
          "type" : "boolean",
          "description" : "This will be true if ads should be displayed within the article."
        },
        "keypoints" : {
          "type" : "string",
          "description" : "A plaintext list of key points for an article. Not really used anymore."
        },
        "featured" : {
          "type" : "boolean",
          "description" : "Treat this article as a featured article."
        },
        "image" : {
          "type" : "string",
          "description" : "Article image URL. See [resizing](#text_resizing_images) for info on getting the correct image size."
        },
        "premium" : {
          "type" : "boolean",
          "description" : "Whether or not this is a premium article. If it is and the user has no access to the article, then the \"article\" key will be omitted from the result."
        },
        "price" : {
          "type" : "number",
          "description" : "The price of a premium article. Left over from when we used to sell access to individual articles, and is unused now."
        },
        "tags" : {
          "type" : "array",
          "description" : "An array of tags for the article.",
          "items" : {
            "type" : "string"
          }
        },
        "timestamp" : {
          "type" : "integer",
          "description" : "UNIX timestamp of the article date."
        },
        "url" : {
          "type" : "string",
          "description" : "The article URL."
        },
        "type" : {
          "required" : [ "id", "name" ],
          "type" : "object",
          "description" : "The news type of the article.",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Article type ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Article type name."
            }
          }
        },
        "files" : {
          "type" : "array",
          "description" : "If the article has files attached to it for download, then they will be listed here. This key will only be included on individual article requests.\n\n[Documentation on downloading attachments](#operation_download_an_article_attachment).",
          "items" : {
            "required" : [ "filename" ],
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Description of the file."
              },
              "filename" : {
                "type" : "string",
                "description" : "The file's filename."
              }
            }
          }
        }
      }
    },
    "Error" : {
      "type" : "object",
      "required" : [ "errors" ],
      "properties" : {
        "errors" : {
          "type" : "array",
          "items" : {
            "required" : [ "message", "status" ],
            "type" : "object",
            "properties" : {
              "message" : {
                "type" : "string",
                "description" : "A short description of what the error was."
              },
              "status" : {
                "type" : "integer",
                "description" : "The closest equivalent HTTP status code. This will usually match the HTTP status code that has been sent from the response.",
                "example" : 400
              }
            }
          }
        }
      },
      "description" : "This is an error response. It will be returned if there's any problems with the request. Note that is possible to have both data and errors returned in the one response, although it doesn't happen often.\n\nThe errors array will always have at least one element. The errors are in the array in an unspecified order - none is seen as more severe than the other."
    },
    "Traffic Data" : {
      "type" : "object",
      "required" : [ "id", "isPercent", "name", "showGrowth", "values" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Field ID."
        },
        "name" : {
          "type" : "string",
          "description" : "Field name."
        },
        "isPercent" : {
          "type" : "boolean",
          "description" : "True if the data returned is a percentage instead of a normal number."
        },
        "showGrowth" : {
          "type" : "boolean",
          "description" : "Whether or not to show the growth values in resulting charts based on this data."
        },
        "values" : {
          "type" : "array",
          "description" : "Traffic values.",
          "items" : {
            "required" : [ "periods", "year" ],
            "type" : "object",
            "properties" : {
              "year" : {
                "type" : "integer",
                "description" : "Traffic data year."
              },
              "periods" : {
                "type" : "array",
                "description" : "Traffic data periods.",
                "items" : {
                  "required" : [ "grouping", "note", "period", "value" ],
                  "type" : "object",
                  "properties" : {
                    "period" : {
                      "type" : "integer",
                      "description" : "Period number. If this is a monthly field, this will be the month of the year. If it is quarterly, it will be the year quarter."
                    },
                    "note" : {
                      "type" : "string",
                      "description" : "If there's any notes attached to this record, they'll be here in plaintext."
                    },
                    "grouping" : {
                      "type" : "string",
                      "description" : "If there's an extra string grouping on this field, it will be here."
                    },
                    "value" : {
                      "type" : "number",
                      "description" : "The period's value."
                    }
                  }
                }
              }
            }
          }
        },
        "children" : {
          "type" : "array",
          "description" : "If there are child fields with data, they will be contained here.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Traffic Field" : {
      "type" : "object",
      "required" : [ "id", "name", "years" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Traffic field ID."
        },
        "name" : {
          "type" : "string",
          "description" : "Traffic field name."
        },
        "years" : {
          "type" : "array",
          "description" : "An array of years that have data for this traffic field.",
          "items" : {
            "type" : "integer"
          }
        },
        "children" : {
          "type" : "array",
          "description" : "If there are any child fields, they will be listed here.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Profile Search Result" : {
      "type" : "object",
      "required" : [ "id", "name", "type", "url" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Profile ID."
        },
        "type" : {
          "required" : [ "name" ],
          "type" : "object",
          "description" : "Profile type.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Profile type ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Profile type name."
            }
          }
        },
        "name" : {
          "type" : "string",
          "description" : "Profile name."
        },
        "iata" : {
          "type" : "string",
          "description" : "Profile IATA code (if available)."
        },
        "icao" : {
          "type" : "string",
          "description" : "Profile ICAO code (if available)."
        },
        "url" : {
          "type" : "string",
          "description" : "Profile URL."
        },
        "country" : {
          "required" : [ "code", "id", "name" ],
          "type" : "object",
          "description" : "If the profile has a country linked to it, country details are here.",
          "properties" : {
            "id" : {
              "type" : "string",
              "description" : "Country ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Country name."
            },
            "code" : {
              "type" : "string",
              "description" : "2-letter country code."
            }
          }
        }
      }
    },
    "Video" : {
      "type" : "object",
      "required" : [ "date", "description", "embed", "event", "id", "name", "url", "vimeoid" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Internal video ID."
        },
        "name" : {
          "type" : "string",
          "description" : "Video name."
        },
        "url" : {
          "type" : "string",
          "description" : "Video URL on the CAPA site."
        },
        "date" : {
          "type" : "integer",
          "description" : "UNIX timestamp of when the video was published."
        },
        "description" : {
          "type" : "string",
          "description" : "HTML description of the video."
        },
        "event" : {
          "required" : [ "name" ],
          "type" : "object",
          "description" : "Event the video was filmed at",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Event ID if it was a CAPA event."
            },
            "name" : {
              "type" : "string",
              "description" : "Event name."
            }
          }
        },
        "vimeoid" : {
          "type" : "integer",
          "description" : "Vimeo ID number of the video. Zero if not a Vimeo video."
        },
        "embed" : {
          "type" : "string",
          "description" : "URL of the video if it is not hosted on Vimeo. Blank if it is."
        }
      }
    },
    "Fleet Saved Search" : {
      "type" : "object",
      "required" : [ "columns", "id", "name", "search" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Saved search ID."
        },
        "name" : {
          "type" : "string",
          "description" : "Saved search name."
        },
        "search" : {
          "type" : "object",
          "description" : "This will be an object of fleet search parameters.",
          "properties" : { }
        },
        "columns" : {
          "type" : "array",
          "description" : "An array of columns to display for the search. This is currently unused and subject to change.",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Fleet Filter Result" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Result ID."
        },
        "name" : {
          "type" : "string",
          "description" : "Result name."
        }
      }
    },
    "Fleet Result" : {
      "type" : "object",
      "required" : [ "aircraft", "effective", "event", "id", "note", "status" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Record ID."
        },
        "aircraft" : {
          "required" : [ "engine", "id", "mtow", "myairlease", "role", "seats", "serial", "tail", "variant", "winglets" ],
          "type" : "object",
          "description" : "Aircraft details.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Aircraft ID."
            },
            "serial" : {
              "type" : "string",
              "description" : "Aircraft serial."
            },
            "tail" : {
              "type" : "string",
              "description" : "Aircraft registration/tail number."
            },
            "myairlease" : {
              "type" : "boolean",
              "description" : "True if this record has myairlease data available."
            },
            "winglets" : {
              "type" : "boolean",
              "description" : "True if this aircraft has aftermarket winglets fitted."
            },
            "variant" : {
              "required" : [ "engines", "iata", "icao", "id", "mtow", "name", "series", "winglets" ],
              "type" : "object",
              "description" : "Aircraft variant information.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Variant ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "Aircraft variant name."
                },
                "iata" : {
                  "type" : "string",
                  "description" : "Aircraft variant IATA code."
                },
                "icao" : {
                  "type" : "string",
                  "description" : "Aircraft variant ICAO code."
                },
                "winglets" : {
                  "type" : "boolean",
                  "description" : "True if this aircraft variant comes with stock winglets."
                },
                "mtow" : {
                  "type" : "integer",
                  "description" : "Generic maximum takeoff weight for this aircraft variant (kg)."
                },
                "engines" : {
                  "type" : "integer",
                  "description" : "Number of engines this variant has."
                },
                "series" : {
                  "required" : [ "id", "model", "name" ],
                  "type" : "object",
                  "description" : "Variant series information.",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Variant series ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Variant series name."
                    },
                    "model" : {
                      "required" : [ "id", "manufacturer", "myairlease", "name", "type" ],
                      "type" : "object",
                      "description" : "Aircraft model information.",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Aircraft model ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Aircraft model name."
                        },
                        "myairlease" : {
                          "type" : "string",
                          "description" : "The myairlease name for this aircraft model."
                        },
                        "type" : {
                          "required" : [ "id", "name" ],
                          "type" : "object",
                          "description" : "Model type information.",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Model type ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Model type name."
                            }
                          }
                        },
                        "manufacturer" : {
                          "required" : [ "id", "name" ],
                          "type" : "object",
                          "description" : "Aircraft manufacturer information.",
                          "properties" : {
                            "id" : {
                              "type" : "integer",
                              "description" : "Aircraft manufacturer ID."
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Aircraft manufacturer name."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "seats" : {
              "required" : [ "bclass", "eclass", "fclass", "peclass" ],
              "type" : "object",
              "description" : "Aircraft seat information.",
              "properties" : {
                "fclass" : {
                  "type" : "integer",
                  "description" : "Number of first class seats."
                },
                "bclass" : {
                  "type" : "integer",
                  "description" : "Number of business class seats."
                },
                "peclass" : {
                  "type" : "integer",
                  "description" : "Number of premium economy class seats."
                },
                "eclass" : {
                  "type" : "integer",
                  "description" : "Number of economy class seats."
                }
              }
            },
            "mtow" : {
              "type" : "integer",
              "description" : "Non-generic aircraft maximum takeoff weight (kg)."
            },
            "engine" : {
              "required" : [ "id", "model", "name" ],
              "type" : "object",
              "description" : "Engine information.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Engine ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "Engine name."
                },
                "model" : {
                  "required" : [ "id", "manufacturer", "name" ],
                  "type" : "object",
                  "description" : "Engine model information.",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Engine model ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Engine model name."
                    },
                    "manufacturer" : {
                      "required" : [ "id", "name" ],
                      "type" : "object",
                      "description" : "Engine manufacturer information.",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "Engine manufacturer ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Engine manufacturer name."
                        }
                      }
                    }
                  }
                }
              }
            },
            "role" : {
              "required" : [ "id", "name" ],
              "type" : "object",
              "description" : "Aircraft role information.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Role ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "Role name."
                }
              }
            },
            "line" : {
              "type" : "integer",
              "description" : "Aircraft line number (if available). This is for Boeing aircraft."
            },
            "block" : {
              "type" : "string",
              "description" : "Aircraft variable block identifier. This is for Boeing aircraft."
            },
            "mro" : {
              "required" : [ "cycles", "hours", "month", "year" ],
              "type" : "object",
              "description" : "Hours and cycles information (if available).\n\nThis key will exist if the aircraft has hours/cycles information and the user has access to it.",
              "properties" : {
                "year" : {
                  "type" : "integer",
                  "description" : "Year the hours/cycles applies to."
                },
                "month" : {
                  "type" : "integer",
                  "description" : "Month the hours/cycles applies to (1 = January)."
                },
                "hours" : {
                  "required" : [ "month", "total" ],
                  "type" : "object",
                  "description" : "Hours information.",
                  "properties" : {
                    "total" : {
                      "type" : "integer",
                      "description" : "Total hours registered for the aircraft up until the given month."
                    },
                    "month" : {
                      "type" : "integer",
                      "description" : "Number of hours flown for the aircraft for the given month."
                    }
                  }
                },
                "cycles" : {
                  "required" : [ "month", "total" ],
                  "type" : "object",
                  "description" : "Cycles information.",
                  "properties" : {
                    "total" : {
                      "type" : "integer",
                      "description" : "Total cycles registered for the aircraft up until the given month."
                    },
                    "month" : {
                      "type" : "integer",
                      "description" : "Number of cycles flown for the aircraft for the given month."
                    }
                  }
                }
              }
            },
            "valuation" : {
              "required" : [ "base", "lease", "market", "month", "year" ],
              "type" : "object",
              "description" : "Oriel aircraft valuation information if it exists and the user has access to them. Note that valuations are generic to the variant.",
              "properties" : {
                "year" : {
                  "type" : "integer",
                  "description" : "Valuation year."
                },
                "month" : {
                  "type" : "integer",
                  "description" : "Valuation month (1 = January)."
                },
                "market" : {
                  "type" : "integer",
                  "description" : "USD market value."
                },
                "base" : {
                  "type" : "integer",
                  "description" : "USD base value."
                },
                "lease" : {
                  "type" : "integer",
                  "description" : "USD lease rate."
                }
              }
            },
            "manufactured" : {
              "required" : [ "month", "year" ],
              "type" : "object",
              "description" : "If date of manufacture information is available, it is here.",
              "properties" : {
                "year" : {
                  "type" : "integer",
                  "description" : "Year of manufacture."
                },
                "month" : {
                  "type" : "integer",
                  "description" : "Month of manufacture."
                }
              }
            },
            "delivered" : {
              "required" : [ "month", "year" ],
              "type" : "object",
              "description" : "If delivery information is available, it is here.",
              "properties" : {
                "year" : {
                  "type" : "integer",
                  "description" : "Year of aircraft delivery."
                },
                "month" : {
                  "type" : "integer",
                  "description" : "Month of aircraft delivery.\n\nIf the delivery date is greater than 2 years in the future, this value will not exist."
                },
                "day" : {
                  "type" : "integer",
                  "description" : "Day of aircraft delivery.\n\nIf the delivery date is greater than  6 months in the future, this value will not exist."
                }
              }
            },
            "apu" : {
              "required" : [ "generic", "id", "model", "name" ],
              "type" : "object",
              "description" : "APU information, if available.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "APU ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "APU name."
                },
                "generic" : {
                  "type" : "boolean",
                  "description" : "True if this APU is generic to the variant, false if it is aftermarket."
                },
                "model" : {
                  "required" : [ "id", "manufacturer", "name" ],
                  "type" : "object",
                  "description" : "APU model information.",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "APU model ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "APU model name."
                    },
                    "manufacturer" : {
                      "required" : [ "id", "name" ],
                      "type" : "object",
                      "description" : "APU manufacturer information.",
                      "properties" : {
                        "id" : {
                          "type" : "integer",
                          "description" : "APU manufacturer ID."
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "APU manufacturer name."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "status" : {
          "required" : [ "id", "name" ],
          "type" : "object",
          "description" : "Record status information",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Status ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Status name."
            }
          }
        },
        "event" : {
          "required" : [ "id", "name" ],
          "type" : "object",
          "description" : "Event information.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Event ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Event name."
            }
          }
        },
        "effective" : {
          "required" : [ "from", "to" ],
          "type" : "object",
          "description" : "Record effective information.",
          "properties" : {
            "from" : {
              "type" : "string",
              "format" : "date",
              "description" : "Date that the record was effective from."
            },
            "to" : {
              "type" : "string",
              "format" : "date",
              "description" : "Date that the record is effective to. Will be null if the record is considered to be currently effective."
            }
          }
        },
        "note" : {
          "type" : "string",
          "description" : "Any notes about this record."
        },
        "multiple" : {
          "type" : "string",
          "description" : "If a date range has been used as a query parameter and there are multiple records for a single aircraft returned for that date range, then they will contain a `multiple` key.\n\nThe key can have three possible values - `first`, `multiple` and `final`.\n\n* **first** is the first (oldest) record for that range.\n* **multiple** will be applied to any records between `first` and `final`\n* **final** is the last (newest) record for that range.",
          "enum" : [ "first", "multiple", "final" ]
        },
        "operator" : {
          "required" : [ "country", "iata", "icao", "id", "name", "url" ],
          "type" : "object",
          "description" : "If the aircraft has an operator assigned to it, the details of it will here here.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Operator ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Operator name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Operator IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Operator ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Operator profile URL."
            },
            "country" : {
              "required" : [ "code", "id", "name", "region", "tcode", "url" ],
              "type" : "object",
              "description" : "If country data exists for the operator, it's here.",
              "properties" : {
                "id" : {
                  "type" : "integer",
                  "description" : "Country ID."
                },
                "name" : {
                  "type" : "string",
                  "description" : "Country name."
                },
                "code" : {
                  "type" : "string",
                  "description" : "Country code."
                },
                "tcode" : {
                  "type" : "string",
                  "description" : "Country IATA traffic code."
                },
                "url" : {
                  "type" : "string",
                  "description" : "Country profile URL."
                },
                "region" : {
                  "required" : [ "id", "name", "url" ],
                  "type" : "object",
                  "description" : "Region information.",
                  "properties" : {
                    "id" : {
                      "type" : "integer",
                      "description" : "Region ID."
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Region name."
                    },
                    "url" : {
                      "type" : "string",
                      "description" : "Region profile URL."
                    }
                  }
                }
              }
            }
          }
        },
        "owner" : {
          "required" : [ "iata", "icao", "id", "name", "type" ],
          "type" : "object",
          "description" : "If owner information is available, it is here.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Owner ID."
            },
            "type" : {
              "type" : "integer",
              "description" : "Owner type ID. This will be 1 for airlines and 3 for lessors."
            },
            "name" : {
              "type" : "string",
              "description" : "Owner name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Owner IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Owner ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Owner profile URL."
            }
          }
        },
        "substantative" : {
          "required" : [ "iata", "icao", "id", "name", "type", "url" ],
          "type" : "object",
          "description" : "Substantative owner information, if available.\n\nDue to tax laws etc, it's common for aircraft to be owned by shell corporations, which will be the values you see in the `owner` key. The substantative owner is who we believe to be the \"real\" owner of the aircraft.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Substantive owner ID."
            },
            "type" : {
              "type" : "integer",
              "description" : "Substantative owner type ID. This will be 1 for airlines or 3 for lessors."
            },
            "name" : {
              "type" : "string",
              "description" : "Substantative owner name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Substantative owner IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Substantative owner ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Substantative owner profile URL."
            }
          }
        },
        "sublessor" : {
          "required" : [ "iata", "icao", "id", "name", "type", "url" ],
          "type" : "object",
          "description" : "If sublessor information is available, it is here.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Sublessor ID."
            },
            "type" : {
              "type" : "integer",
              "description" : "Sublessor type ID. This will be 1 for airlines and 3 for lessors."
            },
            "name" : {
              "type" : "string",
              "description" : "Sublessor name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Sublessor IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Sublessor ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Sublessor profile URL."
            }
          }
        },
        "manager" : {
          "required" : [ "iata", "icao", "id", "name", "type", "url" ],
          "type" : "object",
          "description" : "Aircraft manager info, if available.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Aircraft manager ID."
            },
            "type" : {
              "type" : "integer",
              "description" : "Aircraft manager type ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Aircraft manager name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Aircraft manager IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Aircraft manager ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Aircraft manager profile URL."
            }
          }
        },
        "lease" : {
          "required" : [ "certain", "from", "name", "to", "type" ],
          "type" : "object",
          "description" : "Lease information, if available.",
          "properties" : {
            "from" : {
              "type" : "string",
              "format" : "date",
              "description" : "Date the lease started."
            },
            "to" : {
              "type" : "string",
              "format" : "date",
              "description" : "Date the lease ended. Null if ongoing."
            },
            "type" : {
              "type" : "integer",
              "description" : "Lease type ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Lease type name.",
              "example" : "Operating"
            },
            "certain" : {
              "type" : "boolean",
              "description" : "True if this lease information has been confirmed."
            }
          }
        },
        "storage" : {
          "required" : [ "iata", "icao", "id", "name" ],
          "type" : "object",
          "description" : "If the aircraft is currently in storage, this is the details of the airport it is stored at.",
          "properties" : {
            "id" : {
              "type" : "integer",
              "description" : "Airport ID."
            },
            "name" : {
              "type" : "string",
              "description" : "Airport name."
            },
            "iata" : {
              "type" : "string",
              "description" : "Airport IATA code."
            },
            "icao" : {
              "type" : "string",
              "description" : "Airport ICAO code."
            },
            "url" : {
              "type" : "string",
              "description" : "Airport profile URL. Will be null if there is no active profile."
            }
          }
        }
      }
    }
  }
}